{"version":3,"file":"src_app_pages_desktop_desktop_module_ts.js","mappings":"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AE,CAAC;AACCoC,MAAAA,YAAY,EAAE,CAACpH,kBAAD,EAAqBkG,qBAArB,CADf;AAECmB,MAAAA,OAAO,EAAE,CAACrH,kBAAD,EAAqBkG,qBAArB;AAFV,KAAD;AAFuG,GAAD,CAAxH;AAAA;AAQA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC/vB2C;AACN;AACgB;AAC9C;AACP;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAE;AACzB;AACA,uBAAuB,kEAAU;AACjC;AACA,uBAAuB,wDAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACvEoC;AACM;AACI;AACc;AACa;AACb;AACrD,4BAA4B,6CAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kFAAuB;AAC7C;AACA;AACA,2BAA2B,6DAAkB;AAC7C;AACA;AACA;AACA,+BAA+B,qEAAmB;AAClD;AACA;AACA,4CAA4C,qEAAmB;AAC/D;AACA;AACA,4BAA4B,+BAA+B;AAC3D;AACA;AACA;AACA;AACA,4BAA4B,+BAA+B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mDAAK;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1GO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACT2C;AACA;AACG;AACvC,0CAA0C,mDAAK;AACtD,SAAS,0DAAS;AAClB;AACA;AACA;AACA,oBAAoB,mDAAK;AACzB;AACA,eAAe,mDAAU;AACzB,8DAA8D,gCAAgC;AAC9F;AACA,KAAK;AACL;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA,oBAAoB,0CAA0C;AAC9D;;;;;;;;;;;;;;;;;;;ACnB2C;AACA;AACG;AACI;AAC3C;AACP;AACA,QAAQ,0DAAS;AACjB;AACA;AACA,aAAa,8DAAW;AACxB;AACA;AACA,SAAS,8DAAW;AACpB,oBAAoB,mDAAK;AACzB;AACA,eAAe,mDAAU;AACzB,oBAAoB,0DAAS;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,YAAY,4BAA4B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnCiG;AAC1F;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kEAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA,sCAAsC,+DAAc,eAAe,kEAAqB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6BAA6B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5D2C;AACX;AACY;AACrC,yCAAyC,mDAAK;AACrD,WAAW,6CAAK,OAAO,wDAAK;AAC5B;;;;;;;;;;;;;;;;;ACL2C;AACA;AACpC,2CAA2C,mDAAK;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mDAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACrD2C;AACI;AACxC;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kCAAkC,mDAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kEAAuB;AACpD;AACA;AACA,6BAA6B,mEAAwB;AACrD;AACA;AACA;AACA,6BAA6B,sEAA2B;AACxD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChD2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mDAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3BiD;AAC1C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iHAAiH;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,yDAAa;AACvC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;AC7D2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mDAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvBiG;AAC1F;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,+DAAc,oBAAoB,kEAAqB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7B+C;AACxC,qBAAqB,uDAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACR4C;AACrC,mCAAmC,qDAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxBkD;AAC3C,sCAAsC,2DAAc;AAC3D;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvB8C;AACF;AACrC,yBAAyB,qDAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,mEAAsB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qEAAwB;AACpC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzBkD;AAC3C,4BAA4B,2DAAc;AACjD;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvBkC;AAC3B,0BAA0B,2CAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9EyC;AAClC,6BAA6B,iDAAS;AAC7C,uCAAuC,qDAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5C4C;AACrC,0BAA0B,qDAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3BkD;AAC3C,6BAA6B,2DAAc;AAClD;;;;;;;;;;;;;;;;;;ACF8D;AACM;AAC7D,oCAAoC,6EAAuB,CAAC,uEAAoB;AAChF;;;;;;;;;;;;;;;;;;ACHmC;AACM;AACzC,0BAA0B,yDAAa,CAAC,mDAAU;AAClD;;;;;;;;;;;;;;;;;;ACHqC;AACM;AAC3C,2BAA2B,2DAAc,CAAC,qDAAW;AACrD;;;;;;;;;;;;;;;;;;ACHqC;AACM;AAC3C,2BAA2B,2DAAc,CAAC,qDAAW;AACrD;;;;;;;;;;;;;;;;ACHP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AAC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ACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,MAAM;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qDAAU;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,oBAAoB;AACpB,8BAA8B;AAC9B,yBAAyB;AACzB,SAAS,MAAM,SAAS;AACxB,QAAQ,MAAM,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,MAAM;AACrE;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE2I;;;;;;;;;;;;;;;;;;;;;;;;;;;AClI3I;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMW,UAAN,CAAiB;AAEjB;;;AACA,SAASC,YAAT,CAAsBrpB,KAAtB,EAA6B;AACzB;AACA;AACA;AACA,SAAOA,KAAK,IAAI,OAAOA,KAAK,CAACspB,OAAb,KAAyB,UAAzC;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,MAAMC,eAAN,SAA8BH,UAA9B,CAAyC;AACrCxlB,EAAAA,WAAW,CAAC4lB,KAAD,EAAQ;AACf;AACA,SAAKA,KAAL,GAAaA,KAAb;AACH;;AACDF,EAAAA,OAAO,GAAG;AACN,WAAOH,kDAAY,CAAC,KAAKK,KAAN,CAAZ,GAA2B,KAAKA,KAAhC,GAAwC5d,wCAAE,CAAC,KAAK4d,KAAN,CAAjD;AACH;;AACDC,EAAAA,UAAU,GAAG,CAAG;;AARqB;AAWzC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,4BAAN,CAAmC;AA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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,yBAAyB;AACzB,uBAAuB;AACvB;AACA;AACA;AACA;AACA,uBAAuB;AACvB,oBAAoB;AACpB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEq/B;;;;;;;;;;;;;;;;;;;;;;;ACrKr/B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,MAAM+E,uBAAN,CAA8B;AAC1B3xB,EAAAA,MAAM,CAAChd,QAAD,EAAW;AACb,WAAO,OAAO4uC,gBAAP,KAA4B,WAA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","sources":["./src/app/components/tool-bar/tool-bar.component.ts","./src/app/components/tool-bar/tool-bar.module.ts","./src/app/components/window/window.component.ts","./src/app/components/window/window.module.ts","./src/app/components/windows-root/windows-root.component.ts","./src/app/components/windows-root/windows-root.module.ts","./src/app/pages/desktop/desktop-routing.module.ts","./src/app/pages/desktop/desktop.module.ts","./src/app/pages/desktop/desktop.page.ts","./src/app/services/windows/windows.service.ts","./src/app/utils/random-string.ts","./node_modules/angular-resizable-element/fesm2015/angular-resizable-element.js","./node_modules/rxjs/_esm2015/internal/Notification.js","./node_modules/rxjs/_esm2015/internal/ReplaySubject.js","./node_modules/rxjs/_esm2015/internal/Scheduler.js","./node_modules/rxjs/_esm2015/internal/observable/interval.js","./node_modules/rxjs/_esm2015/internal/observable/timer.js","./node_modules/rxjs/_esm2015/internal/operators/audit.js","./node_modules/rxjs/_esm2015/internal/operators/auditTime.js","./node_modules/rxjs/_esm2015/internal/operators/debounceTime.js","./node_modules/rxjs/_esm2015/internal/operators/observeOn.js","./node_modules/rxjs/_esm2015/internal/operators/pairwise.js","./node_modules/rxjs/_esm2015/internal/operators/shareReplay.js","./node_modules/rxjs/_esm2015/internal/operators/skip.js","./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js","./node_modules/rxjs/_esm2015/internal/scheduler/Action.js","./node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsapAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsapScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/QueueAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/QueueScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/animationFrame.js","./node_modules/rxjs/_esm2015/internal/scheduler/asap.js","./node_modules/rxjs/_esm2015/internal/scheduler/async.js","./node_modules/rxjs/_esm2015/internal/scheduler/queue.js","./node_modules/rxjs/_esm2015/internal/util/Immediate.js","./node_modules/rxjs/_esm2015/internal/util/isNumeric.js","./node_modules/rxjs/_esm2015/internal/util/isObservable.js","./node_modules/@angular/cdk/fesm2015/a11y.mjs","./node_modules/@angular/cdk/fesm2015/bidi.mjs","./node_modules/@angular/cdk/fesm2015/coercion.mjs","./node_modules/@angular/cdk/fesm2015/collections.mjs","./node_modules/@angular/cdk/fesm2015/drag-drop.mjs","./node_modules/@angular/cdk/fesm2015/keycodes.mjs","./node_modules/@angular/cdk/fesm2015/observers.mjs","./node_modules/@angular/cdk/fesm2015/platform.mjs","./node_modules/@angular/cdk/fesm2015/scrolling.mjs"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { WindowComponent } from '../window/window.component';\r\n\r\n@Component({\r\n  selector: 'app-tool-bar',\r\n  templateUrl: './tool-bar.component.html',\r\n  styleUrls: ['./tool-bar.component.scss'],\r\n})\r\nexport class ToolBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  public apps = [\r\n    {\r\n      id: 0,\r\n      pageUri: '',\r\n      appIconUrl: '',\r\n      component: WindowComponent,\r\n    },\r\n    {\r\n      id: 1,\r\n      pageUri: '',\r\n      appIconUrl: '',\r\n      component: WindowComponent,\r\n    },\r\n    {\r\n      id: 2,\r\n      pageUri: '',\r\n      appIconUrl: '',\r\n      component: WindowComponent,\r\n    },\r\n    {\r\n      id: 3,\r\n      pageUri: '',\r\n      appIconUrl: '',\r\n      component: WindowComponent,\r\n    },\r\n    {\r\n      id: 4,\r\n      pageUri: '',\r\n      appIconUrl: '',\r\n      component: WindowComponent,\r\n    },\r\n  ];\r\n\r\n  @Output()\r\n  public openApp: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  ngOnInit() {}\r\n\r\n  public onOpenApp(app: any): void {\r\n    this.openApp.emit(app);\r\n  }\r\n\r\n  public openMenu(): void {\r\n    console.log('Open menu!');\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ToolBarComponent } from './tool-bar.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n    ],\r\n    declarations: [\r\n        ToolBarComponent\r\n    ],\r\n    exports: [\r\n        ToolBarComponent\r\n    ],\r\n})\r\nexport class ToolBarModule { }\r\n","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from '@angular/core';\r\nimport { ResizeEvent } from 'angular-resizable-element';\r\nimport { WindowsService } from '../../services/windows/windows.service';\r\n\r\n@Component({\r\n  selector: 'app-window',\r\n  templateUrl: './window.component.html',\r\n  styleUrls: ['./window.component.scss'],\r\n})\r\nexport class WindowComponent implements AfterViewInit {\r\n\r\n  @ViewChild('windowElement')\r\n  public windowElement: ElementRef<HTMLElement>;\r\n\r\n  @Input()\r\n  public windowId: string;\r\n\r\n  public windowPosition = { x: 0, y: 0 };\r\n\r\n  constructor(\r\n    private readonly windowsService: WindowsService,\r\n  ) { }\r\n\r\n  public closeWindow(): void {\r\n    this.windowsService.destroy(this.windowId);\r\n  }\r\n\r\n  public ngAfterViewInit(): void {}\r\n\r\n  public onMoveEnd(event: any): void {\r\n    const position = event.source.element.nativeElement.getBoundingClientRect();\r\n    const windowHeight = this.windowElement.nativeElement.offsetHeight;\r\n    const windowWidth = this.windowElement.nativeElement.offsetWidth;\r\n\r\n    this.windowPosition = {\r\n      x: position.x - 80,\r\n      y: position.y,\r\n    };\r\n\r\n    if (position.y < 0) {\r\n      this.windowPosition.y = 0;\r\n      this.windowPosition.x = 0;\r\n      this.fullScreen();\r\n    }\r\n    if (position.y > (window.innerHeight - windowHeight)) {\r\n      this.windowPosition.y = (window.innerHeight - windowHeight);\r\n    }\r\n    if (position.x < 80) {\r\n      this.windowPosition.x = 0;\r\n    }\r\n    if (position.x > (window.innerWidth - windowWidth) - 80) {\r\n      this.windowPosition.x = (window.innerWidth - windowWidth) - 80;\r\n    }\r\n  }\r\n\r\n  public minimize(): void {\r\n    if (this.windowElement.nativeElement.offsetWidth > 500) {\r\n      this.windowElement.nativeElement.style.width = '500px';\r\n    }\r\n    if (this.windowElement.nativeElement.offsetHeight > 500) {\r\n      this.windowElement.nativeElement.style.height = '500px';\r\n    }\r\n  }\r\n\r\n  public fullScreen(): void {\r\n    this.windowElement.nativeElement.style.transform = 'translate3d(0, 0, 0)';\r\n    this.windowElement.nativeElement.style.width = 'calc(100vw - var(--toolbar-width))';\r\n    this.windowElement.nativeElement.style.height = '100vh';\r\n  }\r\n\r\n  public moveListener;\r\n\r\n  onResizeEnd(event: ResizeEvent): void {\r\n    this.windowElement.nativeElement.style.width = (event.rectangle.right - event.rectangle.left) + 'px';\r\n    this.windowElement.nativeElement.style.height = (event.rectangle.bottom - event.rectangle.top) + 'px';\r\n  }\r\n\r\n}\r\n","import { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ResizableModule } from 'angular-resizable-element';\r\nimport { WindowComponent } from './window.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DragDropModule,\r\n    ResizableModule,\r\n  ],\r\n    declarations: [\r\n        WindowComponent\r\n    ],\r\n    exports: [\r\n        WindowComponent\r\n    ],\r\n})\r\nexport class WindowModule { }\r\n","import { AfterViewInit, Component, ComponentRef, OnDestroy, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { window } from 'rxjs/operators';\r\nimport { CreateWindowInterface, WindowsService } from '../../services/windows/windows.service';\r\n\r\n@Component({\r\n  selector: 'app-windows-root',\r\n  templateUrl: './windows-root.component.html',\r\n  styleUrls: ['./windows-root.component.scss'],\r\n})\r\nexport class WindowsRootComponent implements AfterViewInit, OnDestroy {\r\n\r\n  @ViewChild('modalRender', { read: ViewContainerRef })\r\n  public modalRender: ViewContainerRef;\r\n\r\n  public isOpenModal = false;\r\n\r\n  public componentRef: ComponentRef<any>;\r\n\r\n  private modalListSubscription: Subscription;\r\n\r\n  private windows: {\r\n    componentRef: ComponentRef<any>;\r\n    window: CreateWindowInterface;\r\n  }[] = [];\r\n\r\n  constructor(\r\n    private readonly windowsService: WindowsService,\r\n  ) {}\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.modalListSubscription = this.windowsService.modalsList.subscribe(windowsList => {\r\n      windowsList.forEach((windowComponent, index) => {\r\n        if (!this.windows.find(w => w.window.id === windowComponent.id)) {\r\n          this.windows.push({\r\n            window: windowComponent,\r\n            componentRef: this.modalRender.createComponent(windowComponent.component),\r\n          });\r\n        }\r\n\r\n        this.windows[index].componentRef.instance.windowId = windowComponent.id;\r\n      });\r\n\r\n      this.windows.forEach((windowComponent, index) => {\r\n        if (!windowsList.find(w => w.id === windowComponent.window.id)) {\r\n          windowComponent.componentRef.destroy();\r\n          this.windows.splice(index, 1);\r\n        }\r\n      });\r\n\r\n      this.closeOpenAnimation(true);\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.modalListSubscription.unsubscribe();\r\n  }\r\n\r\n  public closeOpenAnimation(isOpening: boolean): void {\r\n    this.isOpenModal = isOpening;\r\n  }\r\n\r\n  public destroy(windowId: string): void {\r\n    this.windowsService.destroy(windowId);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { WindowsRootComponent } from './windows-root.component';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [\r\n    WindowsRootComponent,\r\n  ],\r\n  declarations: [\r\n    WindowsRootComponent,\r\n  ],\r\n})\r\nexport class WindowsRootModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DesktopPage } from './desktop.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DesktopPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DesktopPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { WindowsRootModule } from '../../components/windows-root/windows-root.module';\r\n\r\nimport { DesktopPageRoutingModule } from './desktop-routing.module';\r\n\r\nimport { DesktopPage } from './desktop.page';\r\nimport { ToolBarModule } from '../../components/tool-bar/tool-bar.module';\r\nimport { WindowModule } from '../../components/window/window.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    DesktopPageRoutingModule,\r\n    ToolBarModule,\r\n    WindowModule,\r\n    WindowsRootModule,\r\n  ],\r\n  declarations: [DesktopPage]\r\n})\r\nexport class DesktopPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { WindowsService } from '../../services/windows/windows.service';\r\n\r\n@Component({\r\n  selector: 'app-desktop',\r\n  templateUrl: './desktop.page.html',\r\n  styleUrls: ['./desktop.page.scss'],\r\n})\r\nexport class DesktopPage implements OnInit {\r\n\r\n  constructor(\r\n    private readonly windowsService: WindowsService,\r\n  ) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  public openApp(app: any) {\r\n    const id = this.windowsService.create(app.component);\r\n  }\r\n\r\n}\r\n","//#region Imports\r\n\r\nimport { ComponentFactory, ComponentFactoryResolver, Injectable, Type } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { generateRandomString } from '../../utils/random-string';\r\n\r\n//#endregion\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WindowsService {\r\n\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n  ) { }\r\n\r\n  public modalsList: BehaviorSubject<CreateWindowInterface[]> = new BehaviorSubject<CreateWindowInterface[]>([]);\r\n\r\n  public create(component: Type<any>, options?: any): string {\r\n    const id = generateRandomString(6);\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\r\n    this.modalsList.next([...this.modalsList.value, { id, component: componentFactory, options }]);\r\n    return id;\r\n  }\r\n\r\n  public destroy(id: string): void {\r\n    const modal = this.modalsList.value.find(m => m.id === id);\r\n    this.modalsList.value.splice(this.modalsList.value.indexOf(modal), 1);\r\n    this.modalsList.next(this.modalsList.value);\r\n  }\r\n}\r\n\r\nexport interface CreateWindowInterface {\r\n  id: string;\r\n  component: ComponentFactory<any>;\r\n  options?: {\r\n    componentProps: Record<string, any>;\r\n  };\r\n}\r\n","export function generateRandomString(size): string {\r\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  let randomString = '';\r\n  for (let i = 0; i < size; i++) {\r\n    randomString += chars.charAt(Math.floor(Math.random() * chars.length));\r\n  }\r\n  return randomString;\r\n}\r\n","import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Directive, Inject, Input, Output, Optional, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subject, merge, Observable, fromEvent } from 'rxjs';\nimport { tap, share, mergeMap, take, map, pairwise, filter, takeUntil } from 'rxjs/operators';\n\n/**\n * @hidden\n */\nconst IS_TOUCH_DEVICE = (() => {\n    // In case we're in Node.js environment.\n    if (typeof window === 'undefined') {\n        return false;\n    }\n    else {\n        return ('ontouchstart' in window ||\n            navigator.maxTouchPoints > 0 ||\n            navigator.msMaxTouchPoints > 0);\n    }\n})();\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    descendantsWithId.forEach((descendant) => {\n        descendant.removeAttribute('id');\n    });\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch (_a) { }\n    }\n}\n\nfunction getNewBoundingRectangle(startingRect, edges, clientX, clientY) {\n    const newBoundingRect = {\n        top: startingRect.top,\n        bottom: startingRect.bottom,\n        left: startingRect.left,\n        right: startingRect.right,\n    };\n    if (edges.top) {\n        newBoundingRect.top += clientY;\n    }\n    if (edges.bottom) {\n        newBoundingRect.bottom += clientY;\n    }\n    if (edges.left) {\n        newBoundingRect.left += clientX;\n    }\n    if (edges.right) {\n        newBoundingRect.right += clientX;\n    }\n    newBoundingRect.height = newBoundingRect.bottom - newBoundingRect.top;\n    newBoundingRect.width = newBoundingRect.right - newBoundingRect.left;\n    return newBoundingRect;\n}\nfunction getElementRect(element, ghostElementPositioning) {\n    let translateX = 0;\n    let translateY = 0;\n    const style = element.nativeElement.style;\n    const transformProperties = [\n        'transform',\n        '-ms-transform',\n        '-moz-transform',\n        '-o-transform',\n    ];\n    const transform = transformProperties\n        .map((property) => style[property])\n        .find((value) => !!value);\n    if (transform && transform.includes('translate')) {\n        translateX = transform.replace(/.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/, '$1');\n        translateY = transform.replace(/.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/, '$2');\n    }\n    if (ghostElementPositioning === 'absolute') {\n        return {\n            height: element.nativeElement.offsetHeight,\n            width: element.nativeElement.offsetWidth,\n            top: element.nativeElement.offsetTop - translateY,\n            bottom: element.nativeElement.offsetHeight +\n                element.nativeElement.offsetTop -\n                translateY,\n            left: element.nativeElement.offsetLeft - translateX,\n            right: element.nativeElement.offsetWidth +\n                element.nativeElement.offsetLeft -\n                translateX,\n        };\n    }\n    else {\n        const boundingRect = element.nativeElement.getBoundingClientRect();\n        return {\n            height: boundingRect.height,\n            width: boundingRect.width,\n            top: boundingRect.top - translateY,\n            bottom: boundingRect.bottom - translateY,\n            left: boundingRect.left - translateX,\n            right: boundingRect.right - translateX,\n            scrollTop: element.nativeElement.scrollTop,\n            scrollLeft: element.nativeElement.scrollLeft,\n        };\n    }\n}\nconst DEFAULT_RESIZE_CURSORS = Object.freeze({\n    topLeft: 'nw-resize',\n    topRight: 'ne-resize',\n    bottomLeft: 'sw-resize',\n    bottomRight: 'se-resize',\n    leftOrRight: 'col-resize',\n    topOrBottom: 'row-resize',\n});\nfunction getResizeCursor(edges, cursors) {\n    if (edges.left && edges.top) {\n        return cursors.topLeft;\n    }\n    else if (edges.right && edges.top) {\n        return cursors.topRight;\n    }\n    else if (edges.left && edges.bottom) {\n        return cursors.bottomLeft;\n    }\n    else if (edges.right && edges.bottom) {\n        return cursors.bottomRight;\n    }\n    else if (edges.left || edges.right) {\n        return cursors.leftOrRight;\n    }\n    else if (edges.top || edges.bottom) {\n        return cursors.topOrBottom;\n    }\n    else {\n        return '';\n    }\n}\nfunction getEdgesDiff({ edges, initialRectangle, newRectangle, }) {\n    const edgesDiff = {};\n    Object.keys(edges).forEach((edge) => {\n        edgesDiff[edge] = (newRectangle[edge] || 0) - (initialRectangle[edge] || 0);\n    });\n    return edgesDiff;\n}\nconst RESIZE_ACTIVE_CLASS = 'resize-active';\nconst RESIZE_GHOST_ELEMENT_CLASS = 'resize-ghost-element';\nconst MOUSE_MOVE_THROTTLE_MS = 50;\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * <div\n *   mwlResizable\n *   [resizeEdges]=\"{bottom: true, right: true, top: true, left: true}\"\n *   [enableGhostResize]=\"true\">\n * </div>\n * ```\n * Or in case they are sibling elements:\n * ```html\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * ```\n */\nclass ResizableDirective {\n    /**\n     * @hidden\n     */\n    constructor(platformId, renderer, elm, zone) {\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.elm = elm;\n        this.zone = zone;\n        /**\n         * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n         */\n        this.enableGhostResize = false;\n        /**\n         * A snap grid that resize events will be locked to.\n         *\n         * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n         */\n        this.resizeSnapGrid = {};\n        /**\n         * The mouse cursors that will be set on the resize edges\n         */\n        this.resizeCursors = DEFAULT_RESIZE_CURSORS;\n        /**\n         * Define the positioning of the ghost element (can be fixed or absolute)\n         */\n        this.ghostElementPositioning = 'fixed';\n        /**\n         * Allow elements to be resized to negative dimensions\n         */\n        this.allowNegativeResizes = false;\n        /**\n         * The mouse move throttle in milliseconds, default: 50 ms\n         */\n        this.mouseMoveThrottleMS = MOUSE_MOVE_THROTTLE_MS;\n        /**\n         * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n         */\n        this.resizeStart = new EventEmitter();\n        /**\n         * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n         */\n        this.resizing = new EventEmitter();\n        /**\n         * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n         */\n        this.resizeEnd = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.mouseup = new Subject();\n        /**\n         * @hidden\n         */\n        this.mousedown = new Subject();\n        /**\n         * @hidden\n         */\n        this.mousemove = new Subject();\n        this.destroy$ = new Subject();\n        this.pointerEventListeners = PointerEventListeners.getInstance(renderer, zone);\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        const mousedown$ = merge(this.pointerEventListeners.pointerDown, this.mousedown);\n        const mousemove$ = merge(this.pointerEventListeners.pointerMove, this.mousemove).pipe(tap(({ event }) => {\n            if (currentResize) {\n                try {\n                    event.preventDefault();\n                }\n                catch (e) {\n                    // just adding try-catch not to see errors in console if there is a passive listener for same event somewhere\n                    // browser does nothing except of writing errors to console\n                }\n            }\n        }), share());\n        const mouseup$ = merge(this.pointerEventListeners.pointerUp, this.mouseup);\n        let currentResize;\n        const removeGhostElement = () => {\n            if (currentResize && currentResize.clonedNode) {\n                this.elm.nativeElement.parentElement.removeChild(currentResize.clonedNode);\n                this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n            }\n        };\n        const getResizeCursors = () => {\n            return Object.assign(Object.assign({}, DEFAULT_RESIZE_CURSORS), this.resizeCursors);\n        };\n        const mousedrag = mousedown$\n            .pipe(mergeMap((startCoords) => {\n            function getDiff(moveCoords) {\n                return {\n                    clientX: moveCoords.clientX - startCoords.clientX,\n                    clientY: moveCoords.clientY - startCoords.clientY,\n                };\n            }\n            const getSnapGrid = () => {\n                const snapGrid = { x: 1, y: 1 };\n                if (currentResize) {\n                    if (this.resizeSnapGrid.left && currentResize.edges.left) {\n                        snapGrid.x = +this.resizeSnapGrid.left;\n                    }\n                    else if (this.resizeSnapGrid.right &&\n                        currentResize.edges.right) {\n                        snapGrid.x = +this.resizeSnapGrid.right;\n                    }\n                    if (this.resizeSnapGrid.top && currentResize.edges.top) {\n                        snapGrid.y = +this.resizeSnapGrid.top;\n                    }\n                    else if (this.resizeSnapGrid.bottom &&\n                        currentResize.edges.bottom) {\n                        snapGrid.y = +this.resizeSnapGrid.bottom;\n                    }\n                }\n                return snapGrid;\n            };\n            function getGrid(coords, snapGrid) {\n                return {\n                    x: Math.ceil(coords.clientX / snapGrid.x),\n                    y: Math.ceil(coords.clientY / snapGrid.y),\n                };\n            }\n            return merge(mousemove$.pipe(take(1)).pipe(map((coords) => [, coords])), mousemove$.pipe(pairwise()))\n                .pipe(map(([previousCoords, newCoords]) => {\n                return [\n                    previousCoords ? getDiff(previousCoords) : previousCoords,\n                    getDiff(newCoords),\n                ];\n            }))\n                .pipe(filter(([previousCoords, newCoords]) => {\n                if (!previousCoords) {\n                    return true;\n                }\n                const snapGrid = getSnapGrid();\n                const previousGrid = getGrid(previousCoords, snapGrid);\n                const newGrid = getGrid(newCoords, snapGrid);\n                return (previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y);\n            }))\n                .pipe(map(([, newCoords]) => {\n                const snapGrid = getSnapGrid();\n                return {\n                    clientX: Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n                    clientY: Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y,\n                };\n            }))\n                .pipe(takeUntil(merge(mouseup$, mousedown$)));\n        }))\n            .pipe(filter(() => !!currentResize));\n        mousedrag\n            .pipe(map(({ clientX, clientY }) => {\n            return getNewBoundingRectangle(currentResize.startingRect, currentResize.edges, clientX, clientY);\n        }))\n            .pipe(filter((newBoundingRect) => {\n            return (this.allowNegativeResizes ||\n                !!(newBoundingRect.height &&\n                    newBoundingRect.width &&\n                    newBoundingRect.height > 0 &&\n                    newBoundingRect.width > 0));\n        }))\n            .pipe(filter((newBoundingRect) => {\n            return this.validateResize\n                ? this.validateResize({\n                    rectangle: newBoundingRect,\n                    edges: getEdgesDiff({\n                        edges: currentResize.edges,\n                        initialRectangle: currentResize.startingRect,\n                        newRectangle: newBoundingRect,\n                    }),\n                })\n                : true;\n        }), takeUntil(this.destroy$))\n            .subscribe((newBoundingRect) => {\n            if (currentResize && currentResize.clonedNode) {\n                this.renderer.setStyle(currentResize.clonedNode, 'height', `${newBoundingRect.height}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'width', `${newBoundingRect.width}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'top', `${newBoundingRect.top}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'left', `${newBoundingRect.left}px`);\n            }\n            if (this.resizing.observers.length > 0) {\n                this.zone.run(() => {\n                    this.resizing.emit({\n                        edges: getEdgesDiff({\n                            edges: currentResize.edges,\n                            initialRectangle: currentResize.startingRect,\n                            newRectangle: newBoundingRect,\n                        }),\n                        rectangle: newBoundingRect,\n                    });\n                });\n            }\n            currentResize.currentRect = newBoundingRect;\n        });\n        mousedown$\n            .pipe(map(({ edges }) => {\n            return edges || {};\n        }), filter((edges) => {\n            return Object.keys(edges).length > 0;\n        }), takeUntil(this.destroy$))\n            .subscribe((edges) => {\n            if (currentResize) {\n                removeGhostElement();\n            }\n            const startingRect = getElementRect(this.elm, this.ghostElementPositioning);\n            currentResize = {\n                edges,\n                startingRect,\n                currentRect: startingRect,\n            };\n            const resizeCursors = getResizeCursors();\n            const cursor = getResizeCursor(currentResize.edges, resizeCursors);\n            this.renderer.setStyle(document.body, 'cursor', cursor);\n            this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, true);\n            if (this.enableGhostResize) {\n                currentResize.clonedNode = deepCloneNode(this.elm.nativeElement);\n                this.elm.nativeElement.parentElement.appendChild(currentResize.clonedNode);\n                this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'hidden');\n                this.renderer.setStyle(currentResize.clonedNode, 'position', this.ghostElementPositioning);\n                this.renderer.setStyle(currentResize.clonedNode, 'left', `${currentResize.startingRect.left}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'top', `${currentResize.startingRect.top}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'height', `${currentResize.startingRect.height}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'width', `${currentResize.startingRect.width}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'cursor', getResizeCursor(currentResize.edges, resizeCursors));\n                this.renderer.addClass(currentResize.clonedNode, RESIZE_GHOST_ELEMENT_CLASS);\n                currentResize.clonedNode.scrollTop = currentResize.startingRect\n                    .scrollTop;\n                currentResize.clonedNode.scrollLeft = currentResize.startingRect\n                    .scrollLeft;\n            }\n            if (this.resizeStart.observers.length > 0) {\n                this.zone.run(() => {\n                    this.resizeStart.emit({\n                        edges: getEdgesDiff({\n                            edges,\n                            initialRectangle: startingRect,\n                            newRectangle: startingRect,\n                        }),\n                        rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0),\n                    });\n                });\n            }\n        });\n        mouseup$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            if (currentResize) {\n                this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n                this.renderer.setStyle(document.body, 'cursor', '');\n                this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n                if (this.resizeEnd.observers.length > 0) {\n                    this.zone.run(() => {\n                        this.resizeEnd.emit({\n                            edges: getEdgesDiff({\n                                edges: currentResize.edges,\n                                initialRectangle: currentResize.startingRect,\n                                newRectangle: currentResize.currentRect,\n                            }),\n                            rectangle: currentResize.currentRect,\n                        });\n                    });\n                }\n                removeGhostElement();\n                currentResize = null;\n            }\n        });\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        // browser check for angular universal, because it doesn't know what document is\n        if (isPlatformBrowser(this.platformId)) {\n            this.renderer.setStyle(document.body, 'cursor', '');\n        }\n        this.mousedown.complete();\n        this.mouseup.complete();\n        this.mousemove.complete();\n        this.destroy$.next();\n    }\n    setElementClass(elm, name, add) {\n        if (add) {\n            this.renderer.addClass(elm.nativeElement, name);\n        }\n        else {\n            this.renderer.removeClass(elm.nativeElement, name);\n        }\n    }\n}\nResizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.3\", ngImport: i0, type: ResizableDirective, deps: [{ token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nResizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.3\", type: ResizableDirective, selector: \"[mwlResizable]\", inputs: { validateResize: \"validateResize\", enableGhostResize: \"enableGhostResize\", resizeSnapGrid: \"resizeSnapGrid\", resizeCursors: \"resizeCursors\", ghostElementPositioning: \"ghostElementPositioning\", allowNegativeResizes: \"allowNegativeResizes\", mouseMoveThrottleMS: \"mouseMoveThrottleMS\" }, outputs: { resizeStart: \"resizeStart\", resizing: \"resizing\", resizeEnd: \"resizeEnd\" }, exportAs: [\"mwlResizable\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.3\", ngImport: i0, type: ResizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mwlResizable]',\n                    exportAs: 'mwlResizable',\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { validateResize: [{\n                type: Input\n            }], enableGhostResize: [{\n                type: Input\n            }], resizeSnapGrid: [{\n                type: Input\n            }], resizeCursors: [{\n                type: Input\n            }], ghostElementPositioning: [{\n                type: Input\n            }], allowNegativeResizes: [{\n                type: Input\n            }], mouseMoveThrottleMS: [{\n                type: Input\n            }], resizeStart: [{\n                type: Output\n            }], resizing: [{\n                type: Output\n            }], resizeEnd: [{\n                type: Output\n            }] } });\nclass PointerEventListeners {\n    constructor(renderer, zone) {\n        this.pointerDown = new Observable((observer) => {\n            let unsubscribeMouseDown;\n            let unsubscribeTouchStart;\n            zone.runOutsideAngular(() => {\n                unsubscribeMouseDown = renderer.listen('document', 'mousedown', (event) => {\n                    observer.next({\n                        clientX: event.clientX,\n                        clientY: event.clientY,\n                        event,\n                    });\n                });\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchStart = renderer.listen('document', 'touchstart', (event) => {\n                        observer.next({\n                            clientX: event.touches[0].clientX,\n                            clientY: event.touches[0].clientY,\n                            event,\n                        });\n                    });\n                }\n            });\n            return () => {\n                unsubscribeMouseDown();\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchStart();\n                }\n            };\n        }).pipe(share());\n        this.pointerMove = new Observable((observer) => {\n            let unsubscribeMouseMove;\n            let unsubscribeTouchMove;\n            zone.runOutsideAngular(() => {\n                unsubscribeMouseMove = renderer.listen('document', 'mousemove', (event) => {\n                    observer.next({\n                        clientX: event.clientX,\n                        clientY: event.clientY,\n                        event,\n                    });\n                });\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchMove = renderer.listen('document', 'touchmove', (event) => {\n                        observer.next({\n                            clientX: event.targetTouches[0].clientX,\n                            clientY: event.targetTouches[0].clientY,\n                            event,\n                        });\n                    });\n                }\n            });\n            return () => {\n                unsubscribeMouseMove();\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchMove();\n                }\n            };\n        }).pipe(share());\n        this.pointerUp = new Observable((observer) => {\n            let unsubscribeMouseUp;\n            let unsubscribeTouchEnd;\n            let unsubscribeTouchCancel;\n            zone.runOutsideAngular(() => {\n                unsubscribeMouseUp = renderer.listen('document', 'mouseup', (event) => {\n                    observer.next({\n                        clientX: event.clientX,\n                        clientY: event.clientY,\n                        event,\n                    });\n                });\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchEnd = renderer.listen('document', 'touchend', (event) => {\n                        observer.next({\n                            clientX: event.changedTouches[0].clientX,\n                            clientY: event.changedTouches[0].clientY,\n                            event,\n                        });\n                    });\n                    unsubscribeTouchCancel = renderer.listen('document', 'touchcancel', (event) => {\n                        observer.next({\n                            clientX: event.changedTouches[0].clientX,\n                            clientY: event.changedTouches[0].clientY,\n                            event,\n                        });\n                    });\n                }\n            });\n            return () => {\n                unsubscribeMouseUp();\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchEnd();\n                    unsubscribeTouchCancel();\n                }\n            };\n        }).pipe(share());\n    }\n    static getInstance(renderer, zone) {\n        if (!PointerEventListeners.instance) {\n            PointerEventListeners.instance = new PointerEventListeners(renderer, zone);\n        }\n        return PointerEventListeners.instance;\n    }\n}\n\n/**\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\n *\n * For example\n *\n * ```html\n * <div mwlResizable>\n *   <div mwlResizeHandle [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * </div>\n * ```\n * Or in case they are sibling elements:\n * ```html\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * ```\n */\nclass ResizeHandleDirective {\n    constructor(renderer, element, zone, resizableDirective) {\n        this.renderer = renderer;\n        this.element = element;\n        this.zone = zone;\n        this.resizableDirective = resizableDirective;\n        /**\n         * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\n         */\n        this.resizeEdges = {};\n        this.eventListeners = {};\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.zone.runOutsideAngular(() => {\n            this.listenOnTheHost('mousedown').subscribe((event) => {\n                this.onMousedown(event, event.clientX, event.clientY);\n            });\n            this.listenOnTheHost('mouseup').subscribe((event) => {\n                this.onMouseup(event.clientX, event.clientY);\n            });\n            if (IS_TOUCH_DEVICE) {\n                this.listenOnTheHost('touchstart').subscribe((event) => {\n                    this.onMousedown(event, event.touches[0].clientX, event.touches[0].clientY);\n                });\n                merge(this.listenOnTheHost('touchend'), this.listenOnTheHost('touchcancel')).subscribe((event) => {\n                    this.onMouseup(event.changedTouches[0].clientX, event.changedTouches[0].clientY);\n                });\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.unsubscribeEventListeners();\n    }\n    /**\n     * @hidden\n     */\n    onMousedown(event, clientX, clientY) {\n        event.preventDefault();\n        if (!this.eventListeners.touchmove) {\n            this.eventListeners.touchmove = this.renderer.listen(this.element.nativeElement, 'touchmove', (touchMoveEvent) => {\n                this.onMousemove(touchMoveEvent, touchMoveEvent.targetTouches[0].clientX, touchMoveEvent.targetTouches[0].clientY);\n            });\n        }\n        if (!this.eventListeners.mousemove) {\n            this.eventListeners.mousemove = this.renderer.listen(this.element.nativeElement, 'mousemove', (mouseMoveEvent) => {\n                this.onMousemove(mouseMoveEvent, mouseMoveEvent.clientX, mouseMoveEvent.clientY);\n            });\n        }\n        this.resizable.mousedown.next({\n            clientX,\n            clientY,\n            edges: this.resizeEdges,\n        });\n    }\n    /**\n     * @hidden\n     */\n    onMouseup(clientX, clientY) {\n        this.unsubscribeEventListeners();\n        this.resizable.mouseup.next({\n            clientX,\n            clientY,\n            edges: this.resizeEdges,\n        });\n    }\n    // directive might be passed from DI or as an input\n    get resizable() {\n        return this.resizableDirective || this.resizableContainer;\n    }\n    onMousemove(event, clientX, clientY) {\n        this.resizable.mousemove.next({\n            clientX,\n            clientY,\n            edges: this.resizeEdges,\n            event,\n        });\n    }\n    unsubscribeEventListeners() {\n        Object.keys(this.eventListeners).forEach((type) => {\n            this.eventListeners[type]();\n            delete this.eventListeners[type];\n        });\n    }\n    listenOnTheHost(eventName) {\n        return fromEvent(this.element.nativeElement, eventName).pipe(takeUntil(this.destroy$));\n    }\n}\nResizeHandleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.3\", ngImport: i0, type: ResizeHandleDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: ResizableDirective, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nResizeHandleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.3\", type: ResizeHandleDirective, selector: \"[mwlResizeHandle]\", inputs: { resizeEdges: \"resizeEdges\", resizableContainer: \"resizableContainer\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.3\", ngImport: i0, type: ResizeHandleDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mwlResizeHandle]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: ResizableDirective, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { resizeEdges: [{\n                type: Input\n            }], resizableContainer: [{\n                type: Input\n            }] } });\n\nclass ResizableModule {\n}\nResizableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.3\", ngImport: i0, type: ResizableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nResizableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.3\", ngImport: i0, type: ResizableModule, declarations: [ResizableDirective, ResizeHandleDirective], exports: [ResizableDirective, ResizeHandleDirective] });\nResizableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.3\", ngImport: i0, type: ResizableModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.3\", ngImport: i0, type: ResizableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [ResizableDirective, ResizeHandleDirective],\n                    exports: [ResizableDirective, ResizeHandleDirective],\n                }]\n        }] });\n\n/*\n * Public API Surface of angular-resizable-element\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ResizableDirective, ResizableModule, ResizeHandleDirective };\n","import { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nexport var NotificationKind;\n(function (NotificationKind) {\n    NotificationKind[\"NEXT\"] = \"N\";\n    NotificationKind[\"ERROR\"] = \"E\";\n    NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\nexport class Notification {\n    constructor(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    observe(observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    }\n    do(next, error, complete) {\n        const kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    }\n    accept(nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    }\n    toObservable() {\n        const kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    }\n    static createNext(value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    }\n    static createError(err) {\n        return new Notification('E', undefined, err);\n    }\n    static createComplete() {\n        return Notification.completeNotification;\n    }\n}\nNotification.completeNotification = new Notification('C');\nNotification.undefinedValueNotification = new Notification('N', undefined);\n","import { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nexport class ReplaySubject extends Subject {\n    constructor(bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, scheduler) {\n        super();\n        this.scheduler = scheduler;\n        this._events = [];\n        this._infiniteTimeWindow = false;\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            this._infiniteTimeWindow = true;\n            this.next = this.nextInfiniteTimeWindow;\n        }\n        else {\n            this.next = this.nextTimeWindow;\n        }\n    }\n    nextInfiniteTimeWindow(value) {\n        if (!this.isStopped) {\n            const _events = this._events;\n            _events.push(value);\n            if (_events.length > this._bufferSize) {\n                _events.shift();\n            }\n        }\n        super.next(value);\n    }\n    nextTimeWindow(value) {\n        if (!this.isStopped) {\n            this._events.push(new ReplayEvent(this._getNow(), value));\n            this._trimBufferThenGetEvents();\n        }\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        const _infiniteTimeWindow = this._infiniteTimeWindow;\n        const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        const scheduler = this.scheduler;\n        const len = _events.length;\n        let subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    }\n    _getNow() {\n        return (this.scheduler || queue).now();\n    }\n    _trimBufferThenGetEvents() {\n        const now = this._getNow();\n        const _bufferSize = this._bufferSize;\n        const _windowTime = this._windowTime;\n        const _events = this._events;\n        const eventsCount = _events.length;\n        let spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    }\n}\nclass ReplayEvent {\n    constructor(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n}\n","export class Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = () => Date.now();\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime = 0, periodOrScheduler, scheduler) {\n    let period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        const due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period, subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    const { index, period, subscriber } = state;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nclass AuditOperator {\n    constructor(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    }\n}\nclass AuditSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector) {\n        super(destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            let duration;\n            try {\n                const { durationSelector } = this;\n                duration = durationSelector(value);\n            }\n            catch (err) {\n                return this.destination.error(err);\n            }\n            const innerSubscription = innerSubscribe(duration, new SimpleInnerSubscriber(this));\n            if (!innerSubscription || innerSubscription.closed) {\n                this.clearThrottle();\n            }\n            else {\n                this.add(this.throttled = innerSubscription);\n            }\n        }\n    }\n    clearThrottle() {\n        const { value, hasValue, throttled } = this;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = undefined;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = undefined;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    }\n    notifyNext() {\n        this.clearThrottle();\n    }\n    notifyComplete() {\n        this.clearThrottle();\n    }\n}\n","import { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nexport function auditTime(duration, scheduler = async) {\n    return audit(() => timer(duration, scheduler));\n}\n","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n","import { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function observeOn(scheduler, delay = 0) {\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nexport class ObserveOnOperator {\n    constructor(scheduler, delay = 0) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    }\n}\nexport class ObserveOnSubscriber extends Subscriber {\n    constructor(destination, scheduler, delay = 0) {\n        super(destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    static dispatch(arg) {\n        const { notification, destination } = arg;\n        notification.observe(destination);\n        this.unsubscribe();\n    }\n    scheduleMessage(notification) {\n        const destination = this.destination;\n        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    }\n    _next(value) {\n        this.scheduleMessage(Notification.createNext(value));\n    }\n    _error(err) {\n        this.scheduleMessage(Notification.createError(err));\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleMessage(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nexport class ObserveOnMessage {\n    constructor(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function pairwise() {\n    return (source) => source.lift(new PairwiseOperator());\n}\nclass PairwiseOperator {\n    call(subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    }\n}\nclass PairwiseSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasPrev = false;\n    }\n    _next(value) {\n        let pair;\n        if (this.hasPrev) {\n            pair = [this.prev, value];\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n        if (pair) {\n            this.destination.next(pair);\n        }\n    }\n}\n","import { ReplaySubject } from '../ReplaySubject';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let config;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        config = configOrBufferSize;\n    }\n    else {\n        config = {\n            bufferSize: configOrBufferSize,\n            windowTime,\n            refCount: false,\n            scheduler,\n        };\n    }\n    return (source) => source.lift(shareReplayOperator(config));\n}\nfunction shareReplayOperator({ bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, refCount: useRefCount, scheduler, }) {\n    let subject;\n    let refCount = 0;\n    let subscription;\n    let hasError = false;\n    let isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        let innerSub;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n            innerSub = subject.subscribe(this);\n            subscription = source.subscribe({\n                next(value) {\n                    subject.next(value);\n                },\n                error(err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete() {\n                    isComplete = true;\n                    subscription = undefined;\n                    subject.complete();\n                },\n            });\n            if (isComplete) {\n                subscription = undefined;\n            }\n        }\n        else {\n            innerSub = subject.subscribe(this);\n        }\n        this.add(() => {\n            refCount--;\n            innerSub.unsubscribe();\n            innerSub = undefined;\n            if (subscription && !isComplete && useRefCount && refCount === 0) {\n                subscription.unsubscribe();\n                subscription = undefined;\n                subject = undefined;\n            }\n        });\n    };\n}\n","import { Subscriber } from '../Subscriber';\nexport function skip(count) {\n    return (source) => source.lift(new SkipOperator(count));\n}\nclass SkipOperator {\n    constructor(total) {\n        this.total = total;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    }\n}\nclass SkipSubscriber extends Subscriber {\n    constructor(destination, total) {\n        super(destination);\n        this.total = total;\n        this.count = 0;\n    }\n    _next(x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    }\n}\n","import { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n    return (source) => source.lift(new TakeUntilOperator(notifier));\n}\nclass TakeUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        const notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    }\n}\nclass TakeUntilSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.seenValue = false;\n    }\n    notifyNext() {\n        this.seenValue = true;\n        this.complete();\n    }\n    notifyComplete() {\n    }\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nexport class AnimationFrameAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(() => scheduler.flush(null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { Action } from './Action';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, delay) {\n        let errored = false;\n        let errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    _unsubscribe() {\n        const id = this.id;\n        const scheduler = this.scheduler;\n        const actions = scheduler.actions;\n        const index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    }\n}\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, () => {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        });\n        this.actions = [];\n        this.active = false;\n        this.scheduled = undefined;\n    }\n    schedule(work, delay = 0, state) {\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return super.schedule(work, delay, state);\n        }\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nexport class QueueAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    schedule(state, delay = 0) {\n        if (delay > 0) {\n            return super.schedule(state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    }\n    execute(state, delay) {\n        return (delay > 0 || this.closed) ?\n            super.execute(state, delay) :\n            this._execute(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\nexport const animationFrame = animationFrameScheduler;\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport const asapScheduler = new AsapScheduler(AsapAction);\nexport const asap = asapScheduler;\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\nexport const queueScheduler = new QueueScheduler(QueueAction);\nexport const queue = queueScheduler;\n","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles = {};\nfunction findAndClearHandle(handle) {\n    if (handle in activeHandles) {\n        delete activeHandles[handle];\n        return true;\n    }\n    return false;\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        activeHandles[handle] = true;\n        RESOLVED.then(() => findAndClearHandle(handle) && cb());\n        return handle;\n    },\n    clearImmediate(handle) {\n        findAndClearHandle(handle);\n    },\n};\nexport const TestTools = {\n    pending() {\n        return Object.keys(activeHandles).length;\n    }\n};\n","import { isArray } from './isArray';\nexport function isNumeric(val) {\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nexport function isObservable(obj) {\n    return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, QueryList, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document, \n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        this._platform = _platform;\n        /** Map of all registered message elements that have been placed into the document. */\n        this._messageRegistry = new Map();\n        /** Container for all registered messages. */\n        this._messagesContainer = null;\n        /** Unique ID for the service. */\n        this._id = `${nextId++}`;\n        this._document = _document;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        var _a;\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (((_a = this._messagesContainer) === null || _a === void 0 ? void 0 : _a.childNodes.length) === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        var _a;\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        (_a = this._messagesContainer) === null || _a === void 0 ? void 0 : _a.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        var _a, _b;\n        (_b = (_a = this._messageRegistry.get(key)) === null || _a === void 0 ? void 0 : _a.messageElement) === null || _b === void 0 ? void 0 : _b.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        // @breaking-change 14.0.0 Remove null check for `_platform`.\n        if (this._platform && !this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AriaDescriber, deps: [{ token: DOCUMENT }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nAriaDescriber.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AriaDescriber, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1.Platform }];\n    } });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('')))\n            .subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            ((config === null || config === void 0 ? void 0 : config.ignoreVisibility) || this.isVisible(element)));\n    }\n}\nInteractivityChecker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InteractivityChecker, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nInteractivityChecker.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild === null || focusableChild === void 0 ? void 0 : focusableChild.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nFocusTrapFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    constructor(_elementRef, _focusTrapFactory, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap.enabled;\n    }\n    set enabled(value) {\n        this.focusTrap.enabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the directive should automatically move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    get autoCapture() {\n        return this._autoCapture;\n    }\n    set autoCapture(value) {\n        this._autoCapture = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n}\nCdkTrapFocus.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTrapFocus, deps: [{ token: i0.ElementRef }, { token: FocusTrapFactory }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTrapFocus.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { enabled: [{\n                type: Input,\n                args: ['cdkTrapFocus']\n            }], autoCapture: [{\n                type: Input,\n                args: ['cdkTrapFocusAutoCapture']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        var _a;\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !((_a = target.closest) === null || _a === void 0 ? void 0 : _a.call(target, 'div.cdk-overlay-pane'))) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nFocusTrapManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: FocusTrapManager }, { token: DOCUMENT }, { token: FOCUS_TRAP_INERT_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nConfigurableFocusTrapFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [FOCUS_TRAP_INERT_STRATEGY]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when both `offsetX` and `offsetY` are\n    // zero or `event.buttons` is zero, depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `offsetX` and `offsetY` work on Chrome, but fail on Firefox.\n    // Note that there's an edge case where the user could click the 0x0 spot of the\n    // screen themselves, but that is unlikely to contain interactive elements.\n    return event.buttons === 0 || (event.offsetX === 0 && event.offsetY === 0);\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    constructor(_platform, ngZone, document, options) {\n        this._platform = _platform;\n        /**\n         * The most recently detected input modality event target. Is null if no input modality has been\n         * detected or if the associated event target is null for some unknown reason.\n         */\n        this._mostRecentTarget = null;\n        /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n        this._modality = new BehaviorSubject(null);\n        /**\n         * The timestamp of the last touch input modality. Used to determine whether mousedown events\n         * should be attributed to mouse or touch.\n         */\n        this._lastTouchMs = 0;\n        /**\n         * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n         * bound.\n         */\n        this._onKeydown = (event) => {\n            var _a, _b;\n            // If this is one of the keys we should ignore, then ignore it and don't update the input\n            // modality to keyboard.\n            if ((_b = (_a = this._options) === null || _a === void 0 ? void 0 : _a.ignoreKeys) === null || _b === void 0 ? void 0 : _b.some(keyCode => keyCode === event.keyCode)) {\n                return;\n            }\n            this._modality.next('keyboard');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onMousedown = (event) => {\n            // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n            // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n            // after the previous touch event.\n            if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n                return;\n            }\n            // Fake mousedown events are fired by some screen readers when controls are activated by the\n            // screen reader. Attribute them to keyboard input modality.\n            this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onTouchstart = (event) => {\n            // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n            // events are fired. Again, attribute to keyboard input modality.\n            if (isFakeTouchstartFromScreenReader(event)) {\n                this._modality.next('keyboard');\n                return;\n            }\n            // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n            // triggered via mouse vs touch.\n            this._lastTouchMs = Date.now();\n            this._modality.next('touch');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        this._options = Object.assign(Object.assign({}, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS), options);\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (_platform.isBrowser) {\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n                document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n                document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n            });\n        }\n    }\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        if (this._platform.isBrowser) {\n            document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n            document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n            document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        }\n    }\n}\nInputModalityDetector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InputModalityDetector, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT }, { token: INPUT_MODALITY_DETECTOR_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nInputModalityDetector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.Platform }, { type: i0.NgZone }, { type: Document, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [INPUT_MODALITY_DETECTOR_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._currentPromise) {\n                this._currentPromise = new Promise(resolve => (this._currentResolve = resolve));\n            }\n            clearTimeout(this._previousTimeout);\n            this._previousTimeout = setTimeout(() => {\n                this._liveElement.textContent = message;\n                if (typeof duration === 'number') {\n                    this._previousTimeout = setTimeout(() => this.clear(), duration);\n                }\n                this._currentResolve();\n                this._currentPromise = this._currentResolve = undefined;\n            }, 100);\n            return this._currentPromise;\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        var _a, _b;\n        clearTimeout(this._previousTimeout);\n        (_a = this._liveElement) === null || _a === void 0 ? void 0 : _a.remove();\n        this._liveElement = null;\n        (_b = this._currentResolve) === null || _b === void 0 ? void 0 : _b.call(this);\n        this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LiveAnnouncer, deps: [{ token: LIVE_ANNOUNCER_ELEMENT_TOKEN, optional: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: LIVE_ANNOUNCER_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nLiveAnnouncer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n                    }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAriaLive, deps: [{ token: i0.ElementRef }, { token: LiveAnnouncer }, { token: i1$1.ContentObserver }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAriaLive.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkAriaLive, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: LiveAnnouncer }, { type: i1$1.ContentObserver }, { type: i0.NgZone }]; }, propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._inputModalityDetector = _inputModalityDetector;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /**\n         * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n         * focus events to touch interactions requires special logic.\n         */\n        this._originFromTouchInteraction = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = window.setTimeout(() => (this._windowFocused = false));\n        };\n        /** Subject for stopping our InputModalityDetector subscription. */\n        this._stopInputModalityDetector = new Subject();\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = _getEventTarget(event);\n            const handler = event.type === 'focus' ? this._onFocus : this._onBlur;\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                handler.call(this, event, element);\n            }\n        };\n        this._document = document;\n        this._detectionMode = (options === null || options === void 0 ? void 0 : options.detectionMode) || 0 /* IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            return of(null);\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        return this._windowFocused && this._lastFocusOrigin ? this._lastFocusOrigin : 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === 1 /* EVENTUAL */ ||\n            !!(focusEventTarget === null || focusEventTarget === void 0 ? void 0 : focusEventTarget.contains(this._inputModalityDetector._mostRecentTarget)));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === 0 /* IMMEDIATE */) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    _emitOrigin(subject, origin) {\n        this._ngZone.run(() => subject.next(origin));\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n}\nFocusMonitor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusMonitor, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: InputModalityDetector }, { token: DOCUMENT, optional: true }, { token: FOCUS_MONITOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nFocusMonitor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusMonitor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: i1.Platform }, { type: InputModalityDetector }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => this.cdkFocusChange.emit(origin));\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n}\nCdkMonitorFocus.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkMonitorFocus, deps: [{ token: i0.ElementRef }, { token: FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\nCdkMonitorFocus.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusMonitor }]; }, propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            case 'rgb(0,0,0)':\n                return 2 /* WHITE_ON_BLACK */;\n            case 'rgb(255,255,255)':\n                return 1 /* BLACK_ON_WHITE */;\n        }\n        return 0 /* NONE */;\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            // IE11 doesn't support `classList` operations with multiple arguments\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n            bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n            bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HighContrastModeDetector, deps: [{ token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nHighContrastModeDetector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: A11yModule, deps: [{ token: HighContrastModeDetector }], target: i0.ɵɵFactoryTarget.NgModule });\nA11yModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: A11yModule, declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], imports: [ObserversModule], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] });\nA11yModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: A11yModule, imports: [[ObserversModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ObserversModule],\n                    declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: function () { return [{ type: HighContrastModeDetector }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = (rawValue === null || rawValue === void 0 ? void 0 : rawValue.toLowerCase()) || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && (navigator === null || navigator === void 0 ? void 0 : navigator.language)) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Directionality, deps: [{ token: DIR_DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nDirectionality.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Directionality, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DIR_DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n        return this._dir;\n    }\n    set dir(value) {\n        const previousValue = this._dir;\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this._dir = _resolveDirectionality(value);\n        this._rawDir = value;\n        if (previousValue !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nDir.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: Dir, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BidiModule {\n}\nBidiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBidiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BidiModule, declarations: [Dir], exports: [Dir] });\nBidiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BidiModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [Dir],\n                    declarations: [Dir],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","import { isObservable, of, Subject } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { Injectable, InjectionToken } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repeater that destroys views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _DisposeViewRepeaterStrategy {\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\n                operation = 1 /* INSERTED */;\n            }\n            else if (currentIndex == null) {\n                viewContainerRef.remove(adjustedPreviousIndex);\n                operation = 3 /* REMOVED */;\n            }\n            else {\n                view = viewContainerRef.get(adjustedPreviousIndex);\n                viewContainerRef.move(view, currentIndex);\n                operation = 2 /* MOVED */;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view === null || view === void 0 ? void 0 : view.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repeater that caches views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n    constructor() {\n        /**\n         * The size of the cache used to store unused views.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n         */\n        this.viewCacheSize = 20;\n        /**\n         * View cache that stores embedded view instances that have been previously stamped out,\n         * but don't are not currently rendered. The view repeater will reuse these views rather than\n         * creating brand new ones.\n         *\n         * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n         */\n        this._viewCache = [];\n    }\n    /** Apply changes to the DOM. */\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                // Item added.\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = view ? 1 /* INSERTED */ : 0 /* REPLACED */;\n            }\n            else if (currentIndex == null) {\n                // Item removed.\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n                operation = 3 /* REMOVED */;\n            }\n            else {\n                // Item moved.\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = 2 /* MOVED */;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view === null || view === void 0 ? void 0 : view.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n        for (const view of this._viewCache) {\n            view.destroy();\n        }\n        this._viewCache = [];\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new\n     * one. Returns `undefined` if the item was inserted into a cached view.\n     */\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n        if (cachedView) {\n            cachedView.context.$implicit = value;\n            return undefined;\n        }\n        const viewArgs = viewArgsFactory();\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n    }\n    /** Detaches the view at the given index and inserts into the view cache. */\n    _detachAndCacheView(index, viewContainerRef) {\n        const detachedView = viewContainerRef.detach(index);\n        this._maybeCacheView(detachedView, viewContainerRef);\n    }\n    /** Moves view at the previous index to the current index. */\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n        const view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = value;\n        return view;\n    }\n    /**\n     * Cache the given detached view. If the cache is full, the view will be\n     * destroyed.\n     */\n    _maybeCacheView(view, viewContainerRef) {\n        if (this._viewCache.length < this.viewCacheSize) {\n            this._viewCache.push(view);\n        }\n        else {\n            const index = viewContainerRef.indexOf(view);\n            // The host component could remove views from the container outside of\n            // the view repeater. It's unlikely this will occur, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index, viewContainerRef) {\n        const cachedView = this._viewCache.pop();\n        if (cachedView) {\n            viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /** Currently-selected values. */\n        this._selection = new Set();\n        /** Keeps track of the deselected options that haven't been emitted by the change event. */\n        this._deselectedToEmit = [];\n        /** Keeps track of the selected options that haven't been emitted by the change event. */\n        this._selectedToEmit = [];\n        /** Event emitted when the value has changed. */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach(value => this._markSelected(value));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /** Selected values. */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._markSelected(value));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._unmarkSelected(value));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            this._selected.sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /** Emits a change event and clears the records of selected and deselected values. */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit,\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /** Selects a value. */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /** Deselects a value. */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /** Clears out the selected values. */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach(value => this._unmarkSelected(value));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param id ID of the item.\n     * @param name Name of the item.\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @return Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return () => {\n            this._listeners = this._listeners.filter((registered) => {\n                return listener !== registered;\n            });\n        };\n    }\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: UniqueSelectionDispatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nUniqueSelectionDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: UniqueSelectionDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: UniqueSelectionDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, _DisposeViewRepeaterStrategy, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, getMultipleValuesInSingleSelectionError, isDataSource };\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, Optional, SkipSelf, Output, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            const value = source[key];\n            if (value) {\n                dest.setProperty(key, value, (importantProperties === null || importantProperties === void 0 ? void 0 : importantProperties.has(key)) ? 'important' : '');\n            }\n            else {\n                dest.removeProperty(key);\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        'touch-action': enable ? '' : 'none',\n        '-webkit-user-drag': enable ? '' : 'none',\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n        'user-select': userSelect,\n        '-ms-user-select': userSelect,\n        '-webkit-user-select': userSelect,\n        '-moz-user-select': userSelect,\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n    extendStyles(element.style, {\n        position: enable ? '' : 'fixed',\n        top: enable ? '' : '0',\n        opacity: enable ? '' : '0',\n        left: enable ? '' : '-999em',\n    }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n    return initialTransform && initialTransform != 'none'\n        ? transform + ' ' + initialTransform\n        : transform;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return (parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]));\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height,\n        x: clientRect.x,\n        y: clientRect.y,\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return (pointerY > top - yThreshold &&\n        pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold &&\n        pointerX < right + xThreshold);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document) {\n        this._document = _document;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element),\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = _getEventTarget(event);\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && target.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n    /**\n     * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n     * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n     * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n     * if the element is offset by something like the `BlockScrollStrategy`.\n     */\n    getViewportScrollPosition() {\n        return { top: window.scrollY, left: window.scrollX };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch (_a) { }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Whether the dragging sequence has been started. Doesn't\n         * necessarily mean that the element has been moved.\n         */\n        this._hasStartedDragging = false;\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        event.preventDefault();\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            event.preventDefault();\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta,\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        /** Handles a native `dragstart` event. */\n        this._nativeDragStart = (event) => {\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    event.preventDefault();\n                }\n            }\n            else if (!this.disabled) {\n                // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n                // but some cases like dragging of links can slip through (see #24403).\n                event.preventDefault();\n            }\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, newValue));\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n                element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        var _a, _b;\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            (_a = this._rootElement) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        (_b = this._anchor) === null || _b === void 0 ? void 0 : _b.remove();\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement =\n            this._rootElement =\n                this._ownerSVGElement =\n                    this._placeholderTemplate =\n                        this._previewTemplate =\n                            this._anchor =\n                                this._parentDragRef =\n                                    null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /**\n     * Sets the container into which to insert the preview element.\n     * @param value Container into which to insert the preview.\n     */\n    withPreviewContainer(value) {\n        this._previewContainer = value;\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        var _a, _b;\n        (_a = this._preview) === null || _a === void 0 ? void 0 : _a.remove();\n        (_b = this._previewRef) === null || _b === void 0 ? void 0 : _b.destroy();\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        var _a, _b;\n        (_a = this._placeholder) === null || _a === void 0 ? void 0 : _a.remove();\n        (_b = this._placeholderRef) === null || _b === void 0 ? void 0 : _b.destroy();\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor =\n                this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(pointerPosition),\n                    dropPoint: pointerPosition,\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const placeholder = (this._placeholder = this._createPlaceholderElement());\n            const anchor = (this._anchor = this._anchor || this._document.createComment(''));\n            // Needs to happen before the root element is moved.\n            const shadowRoot = this._getShadowRoot();\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // There's no risk of transforms stacking when inside a drop container so\n            // we can keep the initial transform up to date any time dragging starts.\n            this._initialTransform = element.style.transform || '';\n            // Create the preview after the initial transform has\n            // been cached, because it can be affected by the transform.\n            this._preview = this._createPreviewElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false, dragImportantProperties);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            this._getPreviewInsertionPoint(parent, shadowRoot).appendChild(this._preview);\n            this.started.next({ source: this }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const target = _getEventTarget(event);\n        const isSyntheticEvent = !isTouchSequence &&\n            this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        const isFakeEvent = isTouchSequence\n            ? isFakeTouchstartFromScreenReader(event)\n            : isFakeMousedownFromScreenReader(event);\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (target && target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            const rootStyles = rootElement.style;\n            this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n            rootStyles.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement =\n            previewTemplate && previewTemplate.template && !previewTemplate.matchSize\n                ? { x: 0, y: 0 }\n                : this._getPointerPositionInElement(referenceElement, event);\n        const pointerPosition = (this._pickupPositionOnPage =\n            this._lastKnownPointerPosition =\n                this._getPointerPositionOnPage(event));\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = this._initialTransform = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(pointerPosition);\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance,\n                dropPoint: pointerPosition,\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer &&\n            this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled\n                    ? this._initialIndex\n                    : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this),\n                });\n            });\n        }\n        // Dragging may have been interrupted as a result of the events above.\n        if (this.isDragging()) {\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n            this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n        }\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element.getBoundingClientRect());\n            if (this._initialTransform) {\n                preview.style.transform = this._initialTransform;\n            }\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            'pointer-events': 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            'margin': '0',\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'z-index': `${this._config.zIndex || 1000}`,\n        }, dragImportantProperties);\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    var _a;\n                    if (!event ||\n                        (_getEventTarget(event) === this._preview && event.propertyName === 'transform')) {\n                        (_a = this._preview) === null || _a === void 0 ? void 0 : _a.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        // Stop pointer events on the preview so the user can't\n        // interact with it while the preview is animating.\n        placeholder.style.pointerEvents = 'none';\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y,\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event)\n            ? // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n                // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n                // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n                // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n                // throwing an error. The value returned here will be incorrect, but since this only\n                // breaks inside a developer tool and the value is only used for secondary information,\n                // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n                event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }\n            : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const { width: previewWidth, height: previewHeight } = this._getPreviewRect();\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewWidth - pickupX);\n            x = clamp$1(x, minX, maxX);\n            y = clamp$1(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        const styles = this._rootElement.style;\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\n        if (this._initialTransform == null) {\n            this._initialTransform =\n                styles.transform && styles.transform != 'none' ? styles.transform : '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        styles.transform = combineTransforms(transform, this._initialTransform);\n    }\n    /**\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyPreviewTransform(x, y) {\n        var _a;\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\n        // it could be completely different and the transform might not make sense anymore.\n        const initialTransform = ((_a = this._previewTemplate) === null || _a === void 0 ? void 0 : _a.template) ? undefined : this._initialTransform;\n        const transform = getTransform(x, y);\n        this._preview.style.transform = combineTransforms(transform, initialTransform);\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = _getEventTarget(event);\n            // ClientRect dimensions are based on the scroll position of the page and its parent\n            // node so we have to update the cached boundary ClientRect if the user has scrolled.\n            if (this._boundaryRect &&\n                target !== this._boundaryElement &&\n                target.contains(this._boundaryElement)) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        var _a;\n        return (((_a = this._parentPositions.positions.get(this._document)) === null || _a === void 0 ? void 0 : _a.scrollPosition) ||\n            this._parentPositions.getViewportScrollPosition());\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Gets the element into which the drag preview should be inserted. */\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\n        const previewContainer = this._previewContainer || 'global';\n        if (previewContainer === 'parent') {\n            return initialParent;\n        }\n        if (previewContainer === 'global') {\n            const documentRef = this._document;\n            // We can't use the body if the user is in fullscreen mode,\n            // because the preview will render under the fullscreen element.\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n            return (shadowRoot ||\n                documentRef.fullscreenElement ||\n                documentRef.webkitFullscreenElement ||\n                documentRef.mozFullScreenElement ||\n                documentRef.msFullscreenElement ||\n                documentRef.body);\n        }\n        return coerceElement(previewContainer);\n    }\n    /** Lazily resolves and returns the dimensions of the preview. */\n    _getPreviewRect() {\n        // Cache the preview element rect if we haven't cached it already or if\n        // we cached it too early before the element dimensions were computed.\n        if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n            this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n        }\n        return this._previewRect;\n    }\n    /** Gets a handle that is the target of an event. */\n    _getTargetHandle(event) {\n        return this._handles.find(handle => {\n            return event.target && (event.target === handle || handle.contains(event.target));\n        });\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp(fromIndex, array.length - 1);\n    const to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp(currentIndex, currentArray.length - 1);\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occured and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = { drag: null, delta: 0, overlaps: false };\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Direction in which the list is oriented. */\n        this._orientation = 'vertical';\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Layout direction of the drop list. */\n        this._direction = 'ltr';\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    node.scrollBy(0, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    node.scrollBy(0, scrollStep);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    node.scrollBy(-scrollStep, 0);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    node.scrollBy(scrollStep, 0);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // If we didn't find a new position reference, it means that either the item didn't start off\n        // in this container, or that the item requested to be inserted at the end of the list.\n        if (!newPositionReference &&\n            (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) &&\n            this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            newPositionReference = activeDraggables[0];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed and also parent rects.\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance,\n            dropPoint,\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._cacheItems();\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        this._orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl'\n            ? this._itemPositions.slice().reverse()\n            : this._itemPositions;\n        return items.findIndex(currentItem => currentItem.drag === item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !this._clientRect ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item,\n        });\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem\n                ? item.getPlaceholderElement()\n                : sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* NONE */;\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = {\n                width,\n                height,\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0,\n            };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode &&\n            (verticalScrollDirection !== this._verticalScrollDirection ||\n                horizontalScrollDirection !== this._horizontalScrollDirection ||\n                scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables\n            .map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return {\n                drag,\n                offset: 0,\n                initialTransform: elementToMeasure.style.transform || '',\n                clientRect: getMutableClientRect(elementToMeasure),\n            };\n        })\n            .sort((a, b) => {\n            return isHorizontal\n                ? a.clientRect.left - b.clientRect.left\n                : a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            var _a;\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                const initialTransform = (_a = this._itemPositions.find(current => current.drag === item)) === null || _a === void 0 ? void 0 : _a.initialTransform;\n                rootElement.style.transform = initialTransform || '';\n            }\n        });\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        let itemOffset = isHorizontal\n            ? newPosition.left - currentPosition.left\n            : newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal\n                ? newPosition.width - currentPosition.width\n                : newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this._orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const index = this._itemPositions.findIndex(({ drag, clientRect }) => {\n            // Skip the item itself.\n            if (drag === item) {\n                return false;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag &&\n                    this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal\n                ? // Round these down since most browsers report client rects with\n                    // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                    pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right)\n                : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return index === -1 || !this.sortPredicate(index, item, this) ? -1 : index;\n    }\n    /** Caches the current items in the list and their positions. */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._clientRect ||\n            !isInsideClientRect(this._clientRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) &&\n            items.every(item => {\n                // Note that we have to add an exception to the `enterPredicate` for items that started off\n                // in this drop list. The drag ref has logic that allows an item to return to its initial\n                // container, if it has left the initial container and none of the connected containers\n                // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n                return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n            })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    // Since we know the amount that the user has scrolled we can shift all of the\n                    // client rectangles ourselves. This is cheaper than re-measuring everything and\n                    // we can avoid inconsistent behavior where we might be measuring the element before\n                    // its position has changed.\n                    this._itemPositions.forEach(({ clientRect }) => {\n                        adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\n                    });\n                    // We need two loops for this, because we want all of the cached\n                    // positions to be up-to-date before we re-sort the item.\n                    this._itemPositions.forEach(({ drag }) => {\n                        if (this._dragDropRegistry.isDragging(drag)) {\n                            // We need to re-sort the item manually, because the pointer move\n                            // events won't be dispatched while the user is scrolling.\n                            drag._sortFromLastPointerPosition();\n                        }\n                    });\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = (shadowRoot || this._document);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._activeDraggables.filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* NONE */;\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = [];\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n         * @breaking-change 13.0.0\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.indexOf(drag) > -1) {\n            return;\n        }\n        this._activeDragInstances.push(drag);\n        if (this._activeDragInstances.length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true,\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true,\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions,\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions,\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        const index = this._activeDragInstances.indexOf(drag);\n        if (index > -1) {\n            this._activeDragInstances.splice(index, 1);\n            if (this._activeDragInstances.length === 0) {\n                this._clearGlobalListeners();\n            }\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n        const streams = [this.scroll];\n        if (shadowRoot && shadowRoot !== this._document) {\n            // Note that this is basically the same as `fromEvent` from rjxs, but we do it ourselves,\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n            streams.push(new Observable((observer) => {\n                return this._ngZone.runOutsideAngular(() => {\n                    const eventOptions = true;\n                    const callback = (event) => {\n                        if (this._activeDragInstances.length) {\n                            observer.next(event);\n                        }\n                    };\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\n                    return () => {\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\n                    };\n                });\n            }));\n        }\n        return merge(...streams);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropRegistry, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDragDropRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5,\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDrop, deps: [{ token: DOCUMENT }, { token: i0.NgZone }, { token: i1.ViewportRuler }, { token: DragDropRegistry }], target: i0.ɵɵFactoryTarget.Injectable });\nDragDrop.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDrop, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDrop, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.NgZone }, { type: i1.ViewportRuler }, { type: DragDropRegistry }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropListGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkDropListGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDropListGroup, selector: \"[cdkDropListGroup]\", inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }], exportAs: [\"cdkDropListGroup\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropListGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                    providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDropListGroupDisabled']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate = (index, drag, drop) => {\n            return this.sortPredicate(index, drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef\n                .getVisibleElement()\n                .compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data,\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data,\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance,\n                dropPoint: event.dropPoint,\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropList, deps: [{ token: i0.ElementRef }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: i1.ScrollDispatcher }, { token: i3.Directionality, optional: true }, { token: CDK_DROP_LIST_GROUP, optional: true, skipSelf: true }, { token: CDK_DRAG_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDropList.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], data: [\"cdkDropListData\", \"data\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, host: { properties: { \"attr.id\": \"id\", \"class.cdk-drop-list-disabled\": \"disabled\", \"class.cdk-drop-list-dragging\": \"_dropListRef.isDragging()\", \"class.cdk-drop-list-receiving\": \"_dropListRef.isReceiving()\" }, classAttribute: \"cdk-drop-list\" }, providers: [\n        // Prevent child drop lists from picking up the same group as their parent.\n        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n    ], exportAs: [\"cdkDropList\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropList, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n                        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[attr.id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: i1.ScrollDispatcher }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: CdkDropListGroup, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_DROP_LIST_GROUP]\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_CONFIG]\n                    }] }];\n    }, propDecorators: { connectedTo: [{\n                type: Input,\n                args: ['cdkDropListConnectedTo']\n            }], data: [{\n                type: Input,\n                args: ['cdkDropListData']\n            }], orientation: [{\n                type: Input,\n                args: ['cdkDropListOrientation']\n            }], id: [{\n                type: Input\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDropListLockAxis']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDropListDisabled']\n            }], sortingDisabled: [{\n                type: Input,\n                args: ['cdkDropListSortingDisabled']\n            }], enterPredicate: [{\n                type: Input,\n                args: ['cdkDropListEnterPredicate']\n            }], sortPredicate: [{\n                type: Input,\n                args: ['cdkDropListSortPredicate']\n            }], autoScrollDisabled: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollDisabled']\n            }], autoScrollStep: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollStep']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDropListDropped']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDropListEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDropListExited']\n            }], sorted: [{\n                type: Output,\n                args: ['cdkDropListSorted']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        this._parentDrag = parentDrag;\n    }\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragHandle, deps: [{ token: i0.ElementRef }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragHandle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, host: { classAttribute: \"cdk-drag-handle\" }, providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDragHandle]',\n                    host: {\n                        'class': 'cdk-drag-handle',\n                    },\n                    providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_DRAG_PARENT]\n                    }, {\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }];\n    }, propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDragHandleDisabled']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPlaceholder, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDragPlaceholder, selector: \"ng-template[cdkDragPlaceholder]\", inputs: { data: \"data\" }, providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]',\n                    providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() {\n        return this._matchSize;\n    }\n    set matchSize(value) {\n        this._matchSize = coerceBooleanProperty(value);\n    }\n}\nCdkDragPreview.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPreview, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragPreview.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDragPreview, selector: \"ng-template[cdkDragPreview]\", inputs: { data: \"data\", matchSize: \"matchSize\" }, providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPreview, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPreview]',\n                    providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], matchSize: [{\n                type: Input\n            }] } });\n\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved\n                .pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance,\n            })))\n                .subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null\n                ? config.pointerDirectionChangeThreshold\n                : 5,\n            zIndex: config === null || config === void 0 ? void 0 : config.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    ngAfterViewInit() {\n        // Normally this isn't in the zone, but it can cause major performance regressions for apps\n        // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\n        this._ngZone.runOutsideAngular(() => {\n            // We need to wait for the zone to stabilize, in order for the reference\n            // element to be in the proper place in the DOM. This is mostly relevant\n            // for draggable elements inside portals since they get stamped out in\n            // their original DOM position and then they get transferred to the portal.\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                this._updateRootElement();\n                this._setupHandlesListener();\n                if (this.freeDragPosition) {\n                    this._dragRef.setFreeDragPosition(this.freeDragPosition);\n                }\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n        this._ngZone.runOutsideAngular(() => {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._dragRef.dispose();\n        });\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        var _a;\n        const element = this.element.nativeElement;\n        let rootElement = element;\n        if (this.rootElementSelector) {\n            rootElement =\n                element.closest !== undefined\n                    ? element.closest(this.rootElementSelector)\n                    : // Comment tag doesn't have closest method, so use parent's one.\n                        (_a = element.parentElement) === null || _a === void 0 ? void 0 : _a.closest(this.rootElementSelector);\n        }\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return this.element.nativeElement.closest(boundary);\n        }\n        return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate\n                    ? {\n                        template: this._placeholderTemplate.templateRef,\n                        context: this._placeholderTemplate.data,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                const preview = this._previewTemplate\n                    ? {\n                        template: this._previewTemplate.templateRef,\n                        context: this._previewTemplate.data,\n                        matchSize: this._previewTemplate.matchSize,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay =\n                    typeof dragStartDelay === 'object' && dragStartDelay\n                        ? dragStartDelay\n                        : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview)\n                    .withPreviewContainer(this.previewContainer || 'global');\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            var _a;\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                if (parent.classList.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(((_a = CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })) === null || _a === void 0 ? void 0 : _a._dragRef) || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(() => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(() => {\n            this.released.emit({ source: this });\n        });\n        ref.ended.subscribe(event => {\n            this.ended.emit({\n                source: this,\n                distance: event.distance,\n                dropPoint: event.dropPoint,\n            });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this,\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance,\n                dropPoint: event.dropPoint,\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer, } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n        if (previewContainer) {\n            this.previewContainer = previewContainer;\n        }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n        // Listen for any newly-added handles.\n        this._handles.changes\n            .pipe(startWith(this._handles), \n        // Sync the new handles with the DragRef.\n        tap((handles) => {\n            const childHandleElements = handles\n                .filter(handle => handle._parentDrag === this)\n                .map(handle => handle.element);\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n                childHandleElements.push(this.element);\n            }\n            this._dragRef.withHandles(childHandleElements);\n        }), \n        // Listen if the state of any of the handles changes.\n        switchMap((handles) => {\n            return merge(...handles.map(item => {\n                return item._stateChanges.pipe(startWith(item));\n            }));\n        }), takeUntil(this._destroyed))\n            .subscribe(handleInstance => {\n            // Enabled/disable the handle that changed in the DragRef.\n            const dragRef = this._dragRef;\n            const handle = handleInstance.element.nativeElement;\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n    }\n}\nCdkDrag._dragInstances = [];\nCdkDrag.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDrag, deps: [{ token: i0.ElementRef }, { token: CDK_DROP_LIST, optional: true, skipSelf: true }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: CDK_DRAG_CONFIG, optional: true }, { token: i3.Directionality, optional: true }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: CDK_DRAG_HANDLE, optional: true, self: true }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDrag.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDrag, selector: \"[cdkDrag]\", inputs: { data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], disabled: [\"cdkDragDisabled\", \"disabled\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, host: { properties: { \"class.cdk-drag-disabled\": \"disabled\", \"class.cdk-drag-dragging\": \"_dragRef.isDragging()\" }, classAttribute: \"cdk-drag\" }, providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }], queries: [{ propertyName: \"_previewTemplate\", first: true, predicate: CDK_DRAG_PREVIEW, descendants: true }, { propertyName: \"_placeholderTemplate\", first: true, predicate: CDK_DRAG_PLACEHOLDER, descendants: true }, { propertyName: \"_handles\", predicate: CDK_DRAG_HANDLE, descendants: true }], exportAs: [\"cdkDrag\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDrag, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    host: {\n                        'class': DRAG_HOST_CLASS,\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_DROP_LIST]\n                    }, {\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_CONFIG]\n                    }] }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_HANDLE]\n                    }] }, { type: CdkDrag, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_PARENT]\n                    }] }];\n    }, propDecorators: { _handles: [{\n                type: ContentChildren,\n                args: [CDK_DRAG_HANDLE, { descendants: true }]\n            }], _previewTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PREVIEW]\n            }], _placeholderTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PLACEHOLDER]\n            }], data: [{\n                type: Input,\n                args: ['cdkDragData']\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDragLockAxis']\n            }], rootElementSelector: [{\n                type: Input,\n                args: ['cdkDragRootElement']\n            }], boundaryElement: [{\n                type: Input,\n                args: ['cdkDragBoundary']\n            }], dragStartDelay: [{\n                type: Input,\n                args: ['cdkDragStartDelay']\n            }], freeDragPosition: [{\n                type: Input,\n                args: ['cdkDragFreeDragPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDragDisabled']\n            }], constrainPosition: [{\n                type: Input,\n                args: ['cdkDragConstrainPosition']\n            }], previewClass: [{\n                type: Input,\n                args: ['cdkDragPreviewClass']\n            }], previewContainer: [{\n                type: Input,\n                args: ['cdkDragPreviewContainer']\n            }], started: [{\n                type: Output,\n                args: ['cdkDragStarted']\n            }], released: [{\n                type: Output,\n                args: ['cdkDragReleased']\n            }], ended: [{\n                type: Output,\n                args: ['cdkDragEnded']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDragEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDragExited']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDragDropped']\n            }], moved: [{\n                type: Output,\n                args: ['cdkDragMoved']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DragDropModule {\n}\nDragDropModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDragDropModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, declarations: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder], exports: [CdkScrollableModule,\n        CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder] });\nDragDropModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, providers: [DragDrop], imports: [CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        CdkDropList,\n                        CdkDropListGroup,\n                        CdkDrag,\n                        CdkDragHandle,\n                        CdkDragPreview,\n                        CdkDragPlaceholder,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        CdkDropList,\n                        CdkDropListGroup,\n                        CdkDrag,\n                        CdkDragHandle,\n                        CdkDragPreview,\n                        CdkDragPlaceholder,\n                    ],\n                    providers: [DragDrop],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMutationObserverFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true,\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ContentObserver, deps: [{ token: MutationObserverFactory }], target: i0.ɵɵFactoryTarget.Injectable });\nContentObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ContentObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MutationObserverFactory }]; } });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        var _a;\n        (_a = this._currentSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n}\nCdkObserveContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkObserveContent, deps: [{ token: ContentObserver }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkObserveContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                }]\n        }], ctorParameters: function () { return [{ type: ContentObserver }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkObserveContentDisabled']\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n}\nObserversModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nObserversModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ObserversModule, declarations: [CdkObserveContent], exports: [CdkObserveContent] });\nObserversModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId\n            ? isPlatformBrowser(this._platformId)\n            : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser &&\n            !!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) &&\n            !this.BLINK &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Platform, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nPlatform.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Platform, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: Object, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass PlatformModule {\n}\nPlatformModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PlatformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPlatformModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PlatformModule });\nPlatformModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PlatformModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PlatformModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => (supportsPassiveEvents = true),\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n    // We can't use `declare const` because it causes conflicts inside Google with the real typings\n    // for these symbols and we can't read them off the global object, because they don't appear to\n    // be attached there for some runners like Jest.\n    // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n    return (\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","import { coerceNumberProperty, coerceElement, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, Injectable, Optional, Inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/platform';\nimport { getRtlScrollAxisType, supportsScrollBehavior } from '@angular/cdk/platform';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/collections';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() {\n        /* no-op */\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() {\n        /* no-op */\n    }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(value) {\n        this._itemSize = coerceNumberProperty(value);\n    }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n        return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n        this._minBufferPx = coerceNumberProperty(value);\n    }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n        return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n        this._maxBufferPx = coerceNumberProperty(value);\n    }\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFixedSizeVirtualScroll, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkFixedSizeVirtualScroll.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkFixedSizeVirtualScroll, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, providers: [\n        {\n            provide: VIRTUAL_SCROLL_STRATEGY,\n            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n        },\n    ], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFixedSizeVirtualScroll, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                    providers: [\n                        {\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n                        },\n                    ],\n                }]\n        }], propDecorators: { itemSize: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    constructor(_ngZone, _platform, document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0\n                ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer)\n                : this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while ((element = element.parentElement));\n        return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ScrollDispatcher, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nScrollDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ScrollDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ScrollDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll')\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(observer)));\n    }\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkScrollable, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkScrollable.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkScrollable, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    } });\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    constructor(_platform, ngZone, document) {\n        this._platform = _platform;\n        /** Stream of viewport change events. */\n        this._change = new Subject();\n        /** Event listener that will be used to handle the viewport change events. */\n        this._changeListener = (event) => {\n            this._change.next(event);\n        };\n        this._document = document;\n        ngZone.runOutsideAngular(() => {\n            if (_platform.isBrowser) {\n                const window = this._getWindow();\n                // Note that bind the events ourselves, rather than going through something like RxJS's\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n                window.addEventListener('resize', this._changeListener);\n                window.addEventListener('orientationchange', this._changeListener);\n            }\n            // Clear the cached position so that the viewport is re-measured next time it is required.\n            // We don't need to keep track of the subscription, because it is completed on destroy.\n            this.change().subscribe(() => (this._viewportSize = null));\n        });\n    }\n    ngOnDestroy() {\n        if (this._platform.isBrowser) {\n            const window = this._getWindow();\n            window.removeEventListener('resize', this._changeListener);\n            window.removeEventListener('orientationchange', this._changeListener);\n        }\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a ClientRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top ||\n            document.body.scrollTop ||\n            window.scrollY ||\n            documentElement.scrollTop ||\n            0;\n        const left = -documentRect.left ||\n            document.body.scrollLeft ||\n            window.scrollX ||\n            documentElement.scrollLeft ||\n            0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser\n            ? { width: window.innerWidth, height: window.innerHeight }\n            : { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ViewportRuler, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nViewportRuler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ViewportRuler, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ViewportRuler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        this._appendOnly = false;\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n        /** A stream that emits whenever the rendered range changes. */\n        this.renderedRangeStream = this._renderedRangeSubject;\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n    }\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n     * will be removed.\n     */\n    get appendOnly() {\n        return this._appendOnly;\n    }\n    set appendOnly(value) {\n        this._appendOnly = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            if (this.appendOnly) {\n                range = { start: 0, end: Math.max(this._renderedRange.end, range.end) };\n            }\n            this._renderedRangeSubject.next((this._renderedRange = range));\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        // in appendOnly, we always start from the top\n        offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        return from\n            ? super.measureScrollOffset(from)\n            : super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize =\n            this.orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkVirtualScrollViewport, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: VIRTUAL_SCROLL_STRATEGY, optional: true }, { token: i2.Directionality, optional: true }, { token: ScrollDispatcher }, { token: ViewportRuler }], target: i0.ɵɵFactoryTarget.Component });\nCdkVirtualScrollViewport.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkVirtualScrollViewport, selector: \"cdk-virtual-scroll-viewport\", inputs: { orientation: \"orientation\", appendOnly: \"appendOnly\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, host: { properties: { \"class.cdk-virtual-scroll-orientation-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.cdk-virtual-scroll-orientation-vertical\": \"orientation !== \\\"horizontal\\\"\" }, classAttribute: \"cdk-virtual-scroll-viewport\" }, providers: [\n        {\n            provide: CdkScrollable,\n            useExisting: CdkVirtualScrollViewport,\n        },\n    ], viewQueries: [{ propertyName: \"_contentWrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkVirtualScrollViewport, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-virtual-scroll-viewport', host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: CdkVirtualScrollViewport,\n                        },\n                    ], template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [VIRTUAL_SCROLL_STRATEGY]\n                    }] }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: ScrollDispatcher }, { type: ViewportRuler }];\n    }, propDecorators: { orientation: [{\n                type: Input\n            }], appendOnly: [{\n                type: Input\n            }], scrolledIndexChange: [{\n                type: Output\n            }], _contentWrapper: [{\n                type: ViewChild,\n                args: ['contentWrapper', { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    constructor(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The strategy used to render items in the virtual scroll viewport. */\n    _viewRepeater, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewRepeater = _viewRepeater;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges.pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            if (this.viewChange.observers.length) {\n                ngZone.run(() => this.viewChange.next(this._renderedRange));\n            }\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn\n            ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)\n            : undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode\n            ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode)\n            : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false,\n            },\n            index,\n        };\n    }\n}\nCdkVirtualForOf.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkVirtualForOf, deps: [{ token: i0.ViewContainerRef }, { token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: _VIEW_REPEATER_STRATEGY }, { token: CdkVirtualScrollViewport, skipSelf: true }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkVirtualForOf.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkVirtualForOf, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkVirtualForOf, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ViewContainerRef }, { type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: i2$1._RecycleViewRepeaterStrategy, decorators: [{\n                        type: Inject,\n                        args: [_VIEW_REPEATER_STRATEGY]\n                    }] }, { type: CdkVirtualScrollViewport, decorators: [{\n                        type: SkipSelf\n                    }] }, { type: i0.NgZone }];\n    }, propDecorators: { cdkVirtualForOf: [{\n                type: Input\n            }], cdkVirtualForTrackBy: [{\n                type: Input\n            }], cdkVirtualForTemplate: [{\n                type: Input\n            }], cdkVirtualForTemplateCacheSize: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkScrollableModule {\n}\nCdkScrollableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkScrollableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkScrollableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkScrollableModule, declarations: [CdkScrollable], exports: [CdkScrollable] });\nCdkScrollableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkScrollableModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkScrollableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkScrollable],\n                    declarations: [CdkScrollable],\n                }]\n        }] });\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ScrollingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nScrollingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ScrollingModule, declarations: [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport], imports: [BidiModule, CdkScrollableModule], exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport] });\nScrollingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ScrollingModule, imports: [[BidiModule, CdkScrollableModule], BidiModule, CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ScrollingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, CdkScrollableModule],\n                    exports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                    ],\n                    declarations: [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n"],"names":["i0","EventEmitter","PLATFORM_ID","Directive","Inject","Input","Output","Optional","NgModule","isPlatformBrowser","Subject","merge","Observable","fromEvent","tap","share","mergeMap","take","map","pairwise","filter","takeUntil","IS_TOUCH_DEVICE","window","navigator","maxTouchPoints","msMaxTouchPoints","deepCloneNode","node","clone","cloneNode","descendantsWithId","querySelectorAll","nodeName","toLowerCase","removeAttribute","forEach","descendant","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","length","cloneElements","i","cloneUniqueId","source","type","value","name","context","getContext","drawImage","_a","getNewBoundingRectangle","startingRect","edges","clientX","clientY","newBoundingRect","top","bottom","left","right","height","width","getElementRect","element","ghostElementPositioning","translateX","translateY","style","nativeElement","transformProperties","transform","property","find","includes","replace","offsetHeight","offsetWidth","offsetTop","offsetLeft","boundingRect","getBoundingClientRect","scrollTop","scrollLeft","DEFAULT_RESIZE_CURSORS","Object","freeze","topLeft","topRight","bottomLeft","bottomRight","leftOrRight","topOrBottom","getResizeCursor","cursors","getEdgesDiff","initialRectangle","newRectangle","edgesDiff","keys","edge","RESIZE_ACTIVE_CLASS","RESIZE_GHOST_ELEMENT_CLASS","MOUSE_MOVE_THROTTLE_MS","ResizableDirective","constructor","platformId","renderer","elm","zone","enableGhostResize","resizeSnapGrid","resizeCursors","allowNegativeResizes","mouseMoveThrottleMS","resizeStart","resizing","resizeEnd","mouseup","mousedown","mousemove","destroy$","pointerEventListeners","PointerEventListeners","getInstance","ngOnInit","mousedown$","pointerDown","mousemove$","pointerMove","pipe","event","currentResize","preventDefault","e","mouseup$","pointerUp","removeGhostElement","clonedNode","parentElement","removeChild","setStyle","getResizeCursors","assign","mousedrag","startCoords","getDiff","moveCoords","getSnapGrid","snapGrid","x","y","getGrid","coords","Math","ceil","previousCoords","newCoords","previousGrid","newGrid","round","validateResize","rectangle","subscribe","observers","run","emit","currentRect","cursor","document","body","setElementClass","appendChild","addClass","removeClass","ngOnDestroy","complete","next","add","ɵfac","Renderer2","ElementRef","NgZone","ɵdir","args","exportAs","undefined","decorators","observer","unsubscribeMouseDown","unsubscribeTouchStart","runOutsideAngular","listen","touches","unsubscribeMouseMove","unsubscribeTouchMove","targetTouches","unsubscribeMouseUp","unsubscribeTouchEnd","unsubscribeTouchCancel","changedTouches","instance","ResizeHandleDirective","resizableDirective","resizeEdges","eventListeners","listenOnTheHost","onMousedown","onMouseup","unsubscribeEventListeners","touchmove","touchMoveEvent","onMousemove","mouseMoveEvent","resizable","resizableContainer","eventName","ResizableModule","ɵmod","ɵinj","declarations","exports","DOCUMENT","Injectable","QueryList","InjectionToken","i1","_getFocusedElementPierceShadowDom","normalizePassiveListenerOptions","_getEventTarget","_getShadowRoot","Subscription","BehaviorSubject","of","hasModifierKey","A","Z","ZERO","NINE","END","HOME","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","TAB","ALT","CONTROL","MAC_META","META","SHIFT","debounceTime","skip","distinctUntilChanged","coerceBooleanProperty","coerceElement","i1$1","ObserversModule","ID_DELIMITER","addAriaReferencedId","el","attr","id","ids","getAriaReferenceIds","some","existingId","trim","push","setAttribute","join","removeAriaReferencedId","filteredIds","val","getAttribute","match","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","AriaDescriber","_document","_platform","_messageRegistry","Map","_messagesContainer","_id","describe","hostElement","message","role","_canBeDescribed","key","getKey","setMessageId","set","messageElement","referenceCount","has","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_isElementNode","_removeMessageReference","registeredMessage","get","_deleteMessageElement","childNodes","remove","describedElements","_removeCdkDescribedByReferenceIds","clear","createElement","textContent","_createMessagesContainer","_b","delete","containerClassName","serverContainers","messagesContainer","visibility","classList","isBrowser","originalReferenceIds","indexOf","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","Platform","ɵprov","providedIn","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","EMPTY","_vertical","_allowedModifierKeys","_homeAndEnd","_skipPredicateFn","item","disabled","_pressedLetters","tabOut","change","changes","newItems","itemArray","toArray","newIndex","skipPredicate","predicate","withWrap","shouldWrap","withVerticalOrientation","enabled","withHorizontalOrientation","direction","_horizontal","withAllowedModifierKeys","withTypeAhead","debounceInterval","ngDevMode","getLabel","Error","unsubscribe","letter","inputString","items","_getItemsArray","index","toUpperCase","setActiveItem","withHomeAndEnd","previousActiveItem","updateActiveItem","onKeydown","keyCode","modifiers","isModifierAllowed","every","modifier","setNextItemActive","setPreviousItemActive","setFirstItemActive","setLastItemActive","toLocaleUpperCase","String","fromCharCode","activeItemIndex","activeItem","isTyping","_setActiveItemByIndex","_setActiveItemByDelta","delta","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","FocusKeyManager","arguments","_origin","setFocusOrigin","origin","focus","IsFocusableConfig","ignoreVisibility","InteractivityChecker","isDisabled","hasAttribute","isVisible","hasGeometry","getComputedStyle","isTabbable","frameElement","getFrameElement","getWindow","getTabIndexValue","tabIndexValue","WEBKIT","IOS","isPotentiallyTabbableIOS","FIREFOX","tabIndex","isFocusable","config","isPotentiallyFocusable","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","isNaN","parseInt","inputType","ownerDocument","defaultView","FocusTrap","_element","_checker","_ngZone","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","_enabled","attachAnchors","_startAnchor","_endAnchor","_toggleAnchorTabIndex","destroy","startAnchor","endAnchor","removeEventListener","_createAnchor","addEventListener","parentNode","insertBefore","nextSibling","focusInitialElementWhenReady","options","Promise","resolve","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","console","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","focusableChild","hasAttached","root","children","tabbableChild","anchor","isEnabled","toggleAnchors","fn","isStable","onStable","FocusTrapFactory","create","deferCaptureElements","CdkTrapFocus","_elementRef","_focusTrapFactory","_previouslyFocusedElement","focusTrap","autoCapture","_autoCapture","ngAfterContentInit","_captureFocus","ngDoCheck","ngOnChanges","autoCaptureChange","firstChange","ConfigurableFocusTrap","_focusTrapManager","_inertStrategy","defer","register","deregister","_enable","preventFocus","_disable","allowFocus","FOCUS_TRAP_INERT_STRATEGY","EventListenerFocusTrapInertStrategy","_listener","_trapFocus","target","focusTrapRoot","contains","closest","call","setTimeout","activeElement","FocusTrapManager","_focusTrapStack","ft","stack","splice","ConfigurableFocusTrapFactory","configObject","isFakeMousedownFromScreenReader","buttons","offsetX","offsetY","isFakeTouchstartFromScreenReader","touch","identifier","radiusX","radiusY","INPUT_MODALITY_DETECTOR_OPTIONS","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","ignoreKeys","TOUCH_BUFFER_MS","modalityEventListenerOptions","passive","capture","InputModalityDetector","ngZone","_mostRecentTarget","_modality","_lastTouchMs","_onKeydown","_options","_onMousedown","Date","now","_onTouchstart","modalityDetected","modalityChanged","mostRecentModality","Document","LIVE_ANNOUNCER_ELEMENT_TOKEN","factory","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","announce","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","_currentPromise","_currentResolve","elementClass","previousElements","getElementsByClassName","liveEl","CdkAriaLive","_liveAnnouncer","_contentObserver","_politeness","_subscription","observe","elementText","_previousAnnouncedText","ContentObserver","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","FocusMonitor","_inputModalityDetector","_windowFocused","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_windowFocusListener","_windowFocusTimeoutId","_stopInputModalityDetector","_rootNodeFocusAndBlurListener","handler","_onFocus","_onBlur","_detectionMode","detectionMode","monitor","checkChildren","rootNode","_getDocument","cachedInfo","subject","info","_registerGlobalListeners","stopMonitoring","elementInfo","_setClasses","_removeGlobalListeners","focusVia","focusedElement","_getClosestElementsInfo","currentElement","_originChanged","_setOrigin","_info","_getWindow","doc","_getFocusOrigin","focusEventTarget","_shouldBeAttributedToTouch","_lastFocusOrigin","toggle","isFromInteraction","_originTimeoutId","ms","relatedTarget","Node","_emitOrigin","rootNodeFocusListeners","modality","results","CdkMonitorFocus","_focusMonitor","cdkFocusChange","ngAfterViewInit","_monitorSubscription","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","getHighContrastMode","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","_applyBodyHighContrastModeCssClasses","_hasCheckedHighContrastMode","bodyClasses","mode","A11yModule","highContrastModeDetector","imports","inject","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","language","test","Directionality","bodyDir","dir","htmlDir","documentElement","Dir","_dir","_isInitialized","previousValue","_rawDir","provide","useExisting","providers","host","BidiModule","isObservable","DataSource","isDataSource","connect","ArrayDataSource","_data","disconnect","_DisposeViewRepeaterStrategy","applyChanges","viewContainerRef","itemContextFactory","itemValueResolver","itemViewChanged","forEachOperation","record","adjustedPreviousIndex","currentIndex","view","operation","previousIndex","insertContext","createEmbeddedView","templateRef","move","detach","_RecycleViewRepeaterStrategy","viewCacheSize","_viewCache","viewArgsFactory","_insertView","_detachAndCacheView","_moveView","cachedView","_insertViewFromCache","$implicit","viewArgs","detachedView","_maybeCacheView","pop","insert","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","_markSelected","selected","_selected","Array","from","values","select","_verifyValueAssignment","_emitChangeEvent","deselect","_unmarkSelected","isSelected","_unmarkAll","isEmpty","size","hasValue","sort","isMultipleSelection","added","removed","getMultipleValuesInSingleSelectionError","UniqueSelectionDispatcher","_listeners","notify","listener","registered","_VIEW_REPEATER_STRATEGY","SkipSelf","Self","ContentChildren","ContentChild","coerceArray","coerceNumberProperty","interval","animationFrameScheduler","startWith","switchMap","CdkScrollableModule","i3","extendStyles","dest","importantProperties","hasOwnProperty","setProperty","removeProperty","toggleNativeDragInteractions","enable","userSelect","toggleVisibility","opacity","combineTransforms","initialTransform","parseCssTimeUnitsToMs","multiplier","parseFloat","getTransformTransitionDurationInMs","transitionedProperties","parseCssPropertyValue","prop","propertyIndex","rawDurations","rawDelays","getPropertyValue","split","part","getMutableClientRect","clientRect","isInsideClientRect","adjustClientRect","isPointerNearClientRect","rect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","positions","cache","elements","scrollPosition","getViewportScrollPosition","handleScroll","cachedPosition","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","scrollY","scrollX","passiveEventListenerOptions","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","dragImportantProperties","DragRef","_config","_viewportRuler","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","_moveEvents","_pointerMoveSubscription","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","_direction","dragStartDelay","_disabled","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","targetHandle","_getTargetHandle","_initializeDragSequence","_rootElement","_pointerMove","pointerPosition","_getPointerPositionOnPage","distanceX","abs","_pickupPositionOnPage","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","_dragStartTime","_getDragStartDelay","container","_dropContainer","_endDragSequence","isDragging","isReceiving","_startDragSequence","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","activeTransform","_applyRootElementTransform","distance","_getDragDistance","_pointerDirectionDelta","_pointerUp","_nativeDragStart","withRootElement","withParent","parentDragRef","_parentPositions","registerDragItem","newValue","_toggleNativeDragInteractions","handle","getPlaceholderElement","_placeholder","getRootElement","getVisibleElement","withHandles","handles","disabledHandles","withPreviewTemplate","template","_previewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","_initialTransform","SVGElement","_ownerSVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","_containInsideBoundaryOnResize","parent","_parentDragRef","dispose","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","reset","disableHandle","enableHandle","withDirection","_withDropContainer","getFreeDragPosition","setFreeDragPosition","withPreviewContainer","_previewContainer","_sortFromLastPointerPosition","_preview","_previewRef","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","dropContainer","placeholder","_createPlaceholderElement","createComment","shadowRoot","_createPreviewElement","replaceChild","_getPreviewInsertionPoint","start","_initialContainer","_initialIndex","getItemIndex","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","draggable","rootStyles","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","_previewRect","isPointerOverContainer","_isOverContainer","previousContainer","drop","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","previewConfig","previewClass","preview","rootRect","viewRef","viewContainer","detectChanges","getRootNode","matchElementSize","getTransform","zIndex","isArray","className","placeholderRect","propertyName","timeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","_getViewportScrollPosition","pageX","pageY","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","constrainPosition","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","minX","maxX","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","styles","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","mouse","scrollDifference","_cachedShadowRoot","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","min","max","rootNodes","wrapper","sourceRect","moveItemInArray","array","fromIndex","toIndex","clamp","to","transferArrayItem","currentArray","targetArray","targetIndex","copyArrayItem","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","_isDragging","_itemPositions","_previousSwap","drag","overlaps","_draggables","_siblings","_orientation","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_startScrollInterval","_scrollNode","scrollStep","scrollBy","withScrollableParents","registerDropContainer","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","_getItemIndexFromPointerPosition","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","_cacheItemPositions","_cacheParentPositions","_reset","withItems","previousItems","draggedItems","_cacheItems","connectedTo","slice","withOrientation","orientation","_scrollableElements","reverse","findIndex","currentItem","pointerDelta","_clientRect","siblings","isHorizontal","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","sibling","isDraggedItem","offset","elementToOffset","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","elementToMeasure","a","b","current","_stopReceiving","immediateSibling","end","itemPositions","reversed","lastItemRect","firstItemRect","floor","_canReceive","elementFromPoint","_startReceiving","activeSiblings","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","activeCapturingEventOptions","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","startsWith","_clearGlobalListeners","streams","eventOptions","DEFAULT_CONFIG","DragDrop","createDrag","createDropList","ViewportRuler","CDK_DRAG_PARENT","CDK_DROP_LIST_GROUP","CdkDropListGroup","CDK_DRAG_CONFIG","assertElementNode","_uniqueIdCounter","CDK_DROP_LIST","CdkDropList","dragDrop","_changeDetectorRef","_scrollDispatcher","_group","_destroyed","_unsortedItems","_dropListRef","data","_assignDefaults","_setupInputSyncSubscription","_handleEvents","_dropLists","addItem","_syncItemsWithRef","removeItem","getSortedItems","documentPosition","_dragRef","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","ref","correspondingDropList","list","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","markForCheck","draggingDisabled","listAutoScrollDisabled","listOrientation","ChangeDetectorRef","ScrollDispatcher","useValue","CDK_DRAG_HANDLE","CdkDragHandle","parentDrag","_stateChanges","_parentDrag","CDK_DRAG_PLACEHOLDER","CdkDragPlaceholder","TemplateRef","CDK_DRAG_PREVIEW","CdkDragPreview","_matchSize","DRAG_HOST_CLASS","CdkDrag","_viewContainerRef","_selfHandle","subscription","movedEvent","_syncInputs","_updateRootElement","_setupHandlesListener","freeDragPosition","rootSelectorChange","positionChange","rootElementSelector","_getBoundaryElement","boundary","childHandleElements","handleInstance","dragRef","ViewContainerRef","descendants","DragDropModule","MutationObserverFactory","MutationObserver","_mutationObserverFactory","_observedElements","_","_cleanupObserver","elementOrRef","stream","_observeElement","_unobserveElement","mutations","characterData","childList","subtree","count","CdkObserveContent","_currentSubscription","_unsubscribe","_subscribe","debounce","_debounce","hasV8BreakIterator","Intl","v8BreakIterator","_platformId","EDGE","userAgent","TRIDENT","BLINK","chrome","CSS","ANDROID","SAFARI","PlatformModule","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","supportsPassiveEvents","supportsPassiveEventListeners","defineProperty","rtlScrollAxisType","scrollBehaviorSupported","supportsScrollBehavior","Element","scrollToFunction","prototype","scrollTo","toString","getRtlScrollAxisType","scrollContainer","containerStyle","overflow","content","contentStyle","shadowDomIsSupported","_supportsShadowDom","head","createShadowRoot","attachShadow","ShadowRoot","newActiveElement","composedPath","_isTestEnvironment","__karma__","jasmine","jest","Mocha","forwardRef","Component","ViewEncapsulation","ChangeDetectionStrategy","ViewChild","asapScheduler","auditTime","shareReplay","i2","i2$1","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","attach","viewport","_updateTotalContentSize","_updateRenderedRange","updateItemAndBufferSize","onContentScrolled","onDataLengthChanged","onContentRendered","onRenderedOffsetChanged","scrollToIndex","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","viewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","newVisibleIndex","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","_scrollStrategy","CdkFixedSizeVirtualScroll","useFactory","deps","DEFAULT_SCROLL_TIME","_scrolled","_globalSubscription","_scrolledCount","scrollContainers","elementScrolled","scrollableReference","auditTimeInMs","_addGlobalListener","_removeGlobalListener","ancestorScrolled","elementOrElementRef","ancestors","scrollingContainers","_scrollableContainsElement","scrollableElement","CdkScrollable","elementRef","scrollDispatcher","_elementScrolled","isRtl","_applyScrollToOptions","LEFT","RIGHT","DEFAULT_RESIZE_TIME","_change","_changeListener","_viewportSize","_updateViewportSize","output","getViewportRect","documentRect","throttleTime","innerWidth","innerHeight","rangesEqual","r1","r2","SCROLL_SCHEDULER","requestAnimationFrame","CdkVirtualScrollViewport","viewportRuler","_detachedSubject","_renderedRangeSubject","_appendOnly","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_calculateSpacerSize","appendOnly","_measureViewportSize","_markChangeDetectionNeeded","forOf","_forOf","dataStream","newLength","_doChangeDetection","range","getOffsetToRenderedContentStart","axis","axisDirection","Number","_renderedContentTransform","measureRenderedContentSize","contentEl","_contentWrapper","measureRangeSize","viewportEl","runAfter","runAfterChangeDetection","ɵcmp","encapsulation","None","changeDetection","OnPush","static","getOffset","CdkVirtualForOf","_template","_differs","_viewRepeater","viewChange","_dataSourceChanges","prev","cur","_changeDataSource","_differ","_needsUpdate","_onRenderedDataChange","cdkVirtualForOf","_cdkVirtualForOf","cdkVirtualForTrackBy","_cdkVirtualForTrackBy","cdkVirtualForTemplate","cdkVirtualForTemplateCacheSize","renderedStartIndex","rangeLen","firstNode","lastNode","diff","_renderedItems","_updateContext","_applyChanges","oldDs","newDs","_updateComputedContextProperties","_adjustedPreviousIndex","_getEmbeddedViewArgs","forEachIdentityChange","first","last","even","odd","IterableDiffers","useClass","ScrollingModule"],"sourceRoot":"webpack:///"}